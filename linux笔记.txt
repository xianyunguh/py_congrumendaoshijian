--UNIX 发展历史
    （1）1965年，美国麻省理工学院（MIT）、通用电气公司（GE）及AT&T的贝尔实验室联合
         开发Multics工程计划，其目标是开发一种交互式的具有多道程序处理能力的分时操
         作系统，但因 Multics追求的目标过于庞大复杂，项目进度远远落后于计划，最后
         贝尔实验室宣布退出。
    （2）1969年，美国贝尔实验室的肯 • 汤普森在DEC PDP-7机器上开发出了UNIX系统。
    （3）1971年，肯 • 汤普森的同事丹尼斯 • 里奇发明了C语言；1973年，UNIX系统的绝
         大部分源代码用C语言重写，这为提高UNIX系统的可移植性打下基础。

--UNIX 主要发行版本
    操作系统    公司                          硬件平台
    AIX          IBM                         PowerPC
    HP-UX        HP                          PA-RISC
    Solaris      Sun                         SPARC
    Linux	     Red Hat 、Ubuntu ……	     IA（Intel、AMD、 Cyrix、RISE...）

--Linux 发展历史
    Linux系统诞生于1991年，由芬兰大学生李纳斯（Linus Torvalds）和后来陆续加入的众
    多爱好者共同开发完成。Linux是开源软件，源代码开放的UNIX。

--Linux 内核版本
    Linux内核官网：www.kernel.org
    目前最新的内核版本 3.11.10

--Linux 主要发行版本
    redhat  Centos  suse  fedoro  gentoo linux  红旗linux  mandriva  turbolinux
    debian  ubuntu  knoppix

--开源软件
    apache  Nginx  Mysql  php  samba  mongoDB  python  Ruby  Sphinx

    使用的自由:绝大多数开源软件免费
    研究的自由:可以获得软件源代码
    散布及改良的自由:可以自由传播、改良甚至销售

    支撑互联网的开源技术（LAMP):
        Linux 操作系统 ;Apache Web服务器;  MySQL 数据库；PHP编程语言

--Linux应用领域
    1、基于Linux的企业服务器
        www.netcraft.com (一个扫描服务器信息的网站）
    2、Linux在嵌入式领域
        1）手机、平板电脑
        2）其他嵌入式应用
            智能家电：机顶盒、游戏机、数码相机等
            智能卡系统
            航空系统
            银行系统
            卡拉OK点歌系统
    3、Linux在电影娱乐业
        各种3d设计等，电影特效

--VMware虚拟机安装与使用
   VMware是一个虚拟PC的软件，可以在现有的操作系统上虚拟出一个新的硬件环境，相当于
   模拟出一台新的PC ，以此来实现在一台机器上真正同时运行多个独立的操作系统。
   VMware官方网站 http://www.vmware.com

--系统分区
    主分区：最多只能有4个。
    扩展分区：
        最多只能有1个。
        主分区加扩展分区最多有4个。
        扩展分区不能写入数据，只能包含逻辑分区
    逻辑分区

    硬件设备文件名：
    硬 件	            设备文件名
    IDE硬盘           	/dev/hd[a-d]
    SCSI/SATA/USB硬盘	/dev/sd[a-p]
    光驱              	/dev/cdrom或/dev/hdc
    软盘              	/dev/fd[0-1]
    打印机（25针）    	/dev/lp[0-2]
    打印机（USB）    	/dev/usb/lp[0-15]
    鼠标	                /dev/mouse

    挂载：
    安装时必须要的分区
        	/ （根分区）
        	swap分区（交换分区，内存2倍，不超过2GB）
    推荐分区
        	/boot （启动分区，推荐200MB）

--Linux系统安装
    安装欢迎界面
        “Install or upgrade an existing system”：安装或升级现有系统
        “Install system with basic video driver”：安装过程采用基本的显卡驱动
        “Rescue installed system”：进入系统修复模式
        “Boot from local drive”：退出安装从硬盘启动
        “Memory test”：存储介质检测

    安装日志
        /root/install.log：存储了安装在系统中的软件包及其版本信息
        /root/install.log.syslog：存储了安装过程中留下的事件记录
        /root/anaconda-ks.cfg：以Kickstart配置文件的格式记录安装过程中设置的选
          项信息

--远程登录管理工具
    虚拟机网络配置:
        桥接        通过使用物理机网卡，具有单独ip，注意连接的哪块网卡
        NAT         把物理机作为路由器进行上网
        Host-only   只能与主机通讯，不能连接主机外的其他网络主机。
    工具：SecureCRT Winscp

--学习Linux的注意事项
    Linux严格区分大小写
    Linux中所有内容以文件形式保存，包括硬件
        硬盘文件是/dev/sd[a-p]
        光盘文件是/dev/sr0等
    Linux不靠扩展名区分文件类型
        压缩包：“*.gz”、“*.bz2” *.tar.bz2”、“*.tgz”等
        二进制软件包：“.rpm”
        网页文件：“*.html”、“*.php”
        脚本文件：“*.sh”
        配置文件：“*.conf”
    Linux所有的存储设备都必须挂载之后用户才能使用，包括硬盘、U盘和光盘
    Windows下的程序不能直接在Linux中安装和运行

--服务器管理和维护建议
    1、Linux各目录的作用
        /bin/
        	存放系统命令的目录。
        	普通用户和超级用户都可以执行。
        	不过放在/bin下的命令在单用户模式下也可以执行。
        /sbin/
        	保存和系统环境设置相关的命令。
        	只有超级用户可以使用这些命令进行系统环境设置，但是有些命令也可以允许
        	普通用户查看。
        /usr/bin/
        	存放系统命令的目录。
        	普通用户和超级用户都可以执行。
        	这些命令和系统启动无关，在单用户模式下不能执行。
        /usr/sbin/
        	存放根文件系统不必要的系统管理命令，例如多数服务程序。
        	只有超级用户可以使用。Linux的系统，在所有“sbin”目录中保存的命令只有
        	超级用户可以使用，“bin”目录中保存的命令所有用户都可以使用。
        /boot/
        	系统启动目录。
        	保存系统启动相关的文件，如内核文件和启动引导程序（grub）文件等
        /dev/
        	设备文件保存位置。
        	Linux中所有内容以文件形式保存，包括硬件。
        	这个目录就是用来保存所有硬件设备文件的。
        /etc/
        	配置文件保存位置。
        	系统内所有采用默认安装方式（rpm安装）的服务的配置文件全部都保存在这个
        	目录当中，如用户账户和密码，服务的启动脚本，常用服务的配置文件等。
        /home/
        	普通用户的家目录。
        	建立用户时，每个用户都要有一个默认登录位置，这个位置就是这个用户的家目
        	录，所有普通用户的家目录就是在/home下建立一个和用户名相同的目录。
        	如用户user1的家目录就是/home/user1
        /lib/
        	系统调用的函数库保存位置
        /lost+found/
        	当系统意外崩溃或机器意外关机，而产生的一些文件碎片放在这里。
        	当系统启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。这个目
        	录只在每个分区中出现，例如/lost+found就是根分区的备份恢复目录，
        	/boot/lost+found就是/boot分区的备份恢复目录。
        /media/
        	挂载目录。
        	系统建议是用来挂载媒体设备的，例如软盘和光盘。
        /mnt/
        	挂载目录。
        	早期Linux中只有这一个挂载目录，并没有细分。现在这个目录系统建议挂载额
        	外设备，如U盘，移动硬盘和其他操作系统的分区。
        /misc/
        	挂载目录。
        	系统建议用来挂载NFS服务的共享目录。其实只要是一个已经建立的空目录就可
        	以作为挂载点。那么系统虽然准备了三个默认挂载目录/media、/mnt、/misc，
        	但是到底在哪个目录中挂载什么设备都可以由管理员自己决定。例如超哥接触
        	Linux的时候，默认挂载目录只有/mnt一个，所以养成了在/mnt下建立不同目录
        	挂载不同设备的习惯。如/mnt/cdrom挂载光盘，/mnt/usb挂载U盘，这都是可以的
        /opt/
        	第三方安装的软件保存位置。
        	这个目录就是放置和安装其他软件的位置，手工安装的源码包软件都可以安装到
        	这个目录当中。不过我还是更加习惯把软件放置到/usr/local/目录当中，也就
        	是说/usr/local/目录也可以用来安装软件。
        /proc/
        	虚拟文件系统。
        	该目录中的数据并不保存到硬盘当中，而是保存到内存当中。	主要保存系统的内
        	核、进程、外部设备状态和网络状态灯。如/proc/cpuinfo是保存CPU信息的，
        	/proc/devices是保存设备驱动的列表的，/proc/filesystems是保存文件系统
        	列表的，/proc/net/是保存网络协议信息的。
        /sys/
        	虚拟文件系统。
        	和/proc目录相似，都是保存在内存当中的，主要是保存与内核相关信息的。
        /root/
        	超级用户的家目录。
        	普通用户家目录在“/home”下，超级用于家目录直接在“/”下。
        /srv/
        	服务数据目录。
        	一些系统服务启动之后，可以在这个目录中保存所需要的数据。
        /tmp/
        	临时目录。
        	系统存放临时文件的目录，该目录下所有用户都可以访问和写入。我们建议此目
        	录中不能保存重要数据，最好每次开机都把该目录清空。
        /usr/
        	系统软件资源目录。
        	注意usr不是user的缩写，而是“Unix Softwre Resource”的缩写，所以不是
        	存放用户数据，而是存放系统软件资源的目录。系统中安装的软件大多数保存在
        	这里，所以除了/usr/bin/和/usr/sbin/ 这两个目录，我在介绍几个/usr/下的
        	二级目录
        /var/
        	动态数据保存位置。
        	主要保存缓存、日志以及软件运行所产生的文件。

    2、服务器注意事项
        远程服务器不允许关机，只能重启。
        重启时应该关闭服务。
        不要在服务器访问高峰运行高负载命令。
        远程配置防火墙时不要把自己踢出服务器。
        指定合理的密码规范并定期更新。
        合理分配权限。
        定期备份重要数据和日志。

--Linux命令格式
    命令格式：
        命令 [-选项] [参数]       例： ls -la /etc
        说明：1）个别命令使用不遵循此格式
              2）当有多个选项时，可以写在一起
              3）简化选项与完整选项, 例如：   -a 等于 --all

--目录处理命令：ls
    命令名称：ls
    命令英文原意：list
    命令所在路径：/bin/ls
    执行权限：所有用户
    功能描述：显示目录文件
    语法：  ls  选项[-ald]  [文件或目录]
            -a    显示所有文件，包括隐藏文件
            -l    详细信息显示
            -d    查看目录属性
    -rw-r--r--
        - 文件类型（- 文件 ，d 目录 ，l 软链接文件）
        rw- r--	r-- （三组分别对应 u所有者 g所属组 o其他人 r读 w写 x执行）

--目录处理命令：mkdir
    命令名称：mkdir
    命令英文原意：make directories
    命令所在路径：/bin/mkdir
    执行权限：所有用户
    语法：mkdir -p [目录名]
    功能描述：创建新目录
              -p 递归创建
    范例： $ mkdir -p /tmp/Japan/boduo
           $ mkdir /tmp/Japan/longze /tmp/Japan/cangjing   (一次创建两个文件夹）
           $ mkdir -p a/b b/c c/a/b/c

--目录处理命令：cd
    命令名称：cd
    命令英文原意：change directory
    命令所在路径：shell内置命令
    执行权限：所有用户
    语法：cd [目录]
    功能描述：切换目录
    范例： $ cd /tmp/Japan/boduo       切换到指定目录
           $ cd ..      回到上一级目录

--目录处理命令：pwd
    命令名称：pwd
    命令英文原意：print working directory
    命令所在路径：/bin/pwd
    执行权限：所有用户
    语法：pwd
    功能描述：显示当前目录
    范例：$ pwd

--文件处理命令：rmdir
    命令名称：rmdir
    命令英文原意：remove empty directories
    命令所在路径：/bin/rmdir
    执行权限：所有用户
    语法：rmdir [目录名]
    功能描述： 删除空目录
    范例： $ rmdir /tmp/Japan/boduo

--目录处理命令：cp
    命令名称：cp
    命令英文原意：copy
    命令所在路径：/bin/cp
    执行权限：所有用户
    语法：cp -rp [原文件或目录] [目标目录]
    -r 复制目录
    -p 保留文件属性
    功能描述：复制文件或目录
    范例：
        $ cp -r /tmp/Japan/cangjing /root
        将目录/tmp/Japan/cangjing复制到目录/root下

        $ cp -rp /tmp/Japan/boduo /tmp/Japan/longze /root
        将/tmp/Japan目录下的boduo和longze目录复制到/root下，保持目录属性

--目录处理命令：mv
    命令名称：mv
    命令英文原意：move
    命令所在路径：/bin/mv
    执行权限：所有用户
    语法：mv [原文件或目录] [目标目录]
    功能描述：剪切文件、改名

--目录处理命令：rm
    命令名称：rm
    命令英文原意：remove
    命令所在路径：/bin/rm
    执行权限：所有用户
    语法：rm -rf [文件或目录]
        -r 删除目录
        -f 强制执行
    功能描述：删除文件
    范例：
        $ rm /tmp/yum.log        删除文件/tmp/yum.log
        $ rm -rf /tmp/Japan/longze        删除目录/tmp/Japan/longze

--文件处理命令：touch
    命令名称：touch
    命令所在路径：/bin/touch
    执行权限：所有用户
    语法：touch [文件名]
    功能描述：创建空文件
    范例： $ touch Japanlovestory.list

--文件处理命令：cat
    命令名称：cat
    命令所在路径：/bin/cat
    执行权限：所有用户
    语法：cat [文件名]
    功能描述：显示文件内容
            -n 显示行号
    范例：  $ cat /etc/issue
            $ cat -n /etc/services

--文件处理命令：tac
    命令名称：tac
    命令所在路径：/usr/bin/tac
    执行权限：所有用户
    语法：tac [文件名]
    功能描述：显示文件内容（反向列示）
    范例： $ tac /etc/issue

--文件处理命令：more
    命令名称：more
    命令所在路径：/bin/more
    执行权限：所有用户
    语法：more [文件名]
        (空格) 或f 翻页
        (Enter) 换行
        q或Q 退出
    功能描述：分页显示文件内容
    范例： $ more /etc/services

--文件处理命令：less
    命令名称：less
    命令所在路径：/usr/bin/less
    执行权限：所有用户
    语法：less [文件名]
    功能描述：分页显示文件内容（可向上翻页）
    范例： $ less /etc/services

--文件处理命令：head
    命令名称：head
    命令所在路径：/usr/bin/head
    执行权限：所有用户
    语法：head [文件名]
    功能描述：显示文件前面几行
              -n 指定行数
    范例： $ head -n 20 /etc/services

--文件处理命令：tail
    命令名称：tail
    命令所在路径：/usr/bin/tail
    执行权限：所有用户
    语法：tail [文件名]
    功能描述：显示文件后面几行
            -n 指定行数
            -f 动态显示文件末尾内容
    范例： $ tail -n 18 /etc/services

--文件处理命令：ln
    命令名称：ln
    命令英文原意：link
    命令所在路径：/bin/ln
    执行权限：所有用户
    语法：ln -s [原文件] [目标文件]
           -s 创建软链接
           不加选项，默认创建硬链接
    功能描述：生成链接文件
    范例：
        $ ln -s /etc/issue /tmp/issue.soft
        创建文件/etc/issue的软链接/tmp/issue.soft
        $ ln /etc/issue /tmp/issue.hard
        创建文件/etc/issue的硬链接/tmp/issue.hard

    软链接特征：类似Windows快捷方式
        1、lrwxrwxrwx  最左边的 l 代表的是软链接，软链接文件权限都为rwxrwxrwx
        2、文件大小：只是符号链接
        3、/tmp/issue.soft -> /etc/issue      箭头指向原文件

    硬链接特征：
        1、相当于cp -p + 同步更新
        echo "this is a test" >> /etc/motd
        2、可通过i节点识别 （ls  -i  文件名   可以查看文件的i节点）
            一个文件肯定有一个i节点，但一个i节点可以对应多个文件，
            硬链接文件与原文件的i节点是相同的。
        3、不能跨分区
        4、不能针对目录使用

--权限管理命令：chmod （只有文件或目录所有者，或者root才有这样的权限）
    命令名称：chmod
    命令英文原意：change the permissions mode of a file
    命令所在路径：/bin/chmod
    执行权限：所有用户
    语法：chmod [{ugoa}{+-=}{rwx}] [文件或目录]
          或：  [mode=421 ] [文件或目录]
                -R 递归修改
                解释：{ugoa} 其中的u是指所有者，g是指所属群组，o指其他用户，a指所有人
    功能描述：改变文件或目录权限

    权限的数字表示
    r ---- 4
    w ---- 2
    x ---- 1
    rwx rw- r--
    7    6  4

    范例：
        $ chmod g+w testfile        赋予文件testfile所属组写权限
        $ chmod u+x testfile        赋予文件testfile所有者可执行权限
        $ chmod g+w,o-r testfile    赋予文件testfile所属组可写权限，并且去掉其他用户的可读权限
        $ chmod g=rwx testfile      不管原来所属组拥有什么的权限，现在所属组权限都改成rwx
        $ chmod 640 testfile
        $ chmod -R 777 testdir      修改目录testfile及其目录下文件为所有用户具有全部权限

    文件、目录权限总结
        r 读权限     文件：可以查看文件内容(cat/more/head/tail/less)；
                     目录：可以列出目录中的内容(ls)
        w 写权限     文件：可以修改文件内容vim；
                     目录：可以在目录中创建、删除文件(touch/mkdir/rmdir/rm)
        x 执行权限   文件：可以执行文件(script command)；
                     目录：可以进入目录（cd)
        '''
        练习：
            mkdir /temp
            touch /temp/testfile
            chmod 777 /temp
            ls -ld /temp
            ls -l /temp/testfile
            这时普通用户能不能删除 /temp/testfile 呢？
            useradd linzhiling
            passwd linzhiling
            用 linzhiling 登陆
            rm /temp/testfile
            证明可以删除

            结论：对文件有写权限，只是可以修改文件的内容，
            但删除一个文件的条件是对这个文件所在目录有写权限。
        '''

--权限管理命令：chown （只有root才能做这样的操作）
    命令名称：chown
    命令英文原意：change file ownership
    命令所在路径：/bin/chown
    执行权限：所有用户
    语法：chown [用户] [文件或目录]
    功能描述：改变文件或目录的所有者
    范例：$ chown shenchao fengjie    改变文件fengjie的所有者为shenchao

--权限管理命令：chgrp
    命令名称：chgrp
    命令英文原意：change file group ownership
    命令所在路径：/bin/chgrp
    执行权限：所有用户
    语法：chgrp [用户组] [文件或目录]
    功能描述：改变文件或目录的所属组
    范例：$ chgrp lampbrother fengjie    改变文件fengjie的所属组为lampbrother

--权限管理命令：umask
    命令名称：umask
    命令英文原意：the user file-creation mask
    命令所在路径：Shell内置命令
    执行权限：所有用户
    语法：umask [-S]
            -S 以rwx形式显示新建文件缺省权限
    功能描述：显示、设置文件或目录的缺省权限
    范例： $ umask -S
    注意：linux 任何新创建的文件，缺省是不能执行权限的。
          如果不加-S参数，则显示类似0022这样的数字，第一个0代表的是特殊权限，
          实际权限是777-022=755  而这个算出来的755称做俺码值。如果想改缺省权限，
          应该是类似这样：umask 023   (023是算出来的，777-754=023，这样最后得到
          的缺省权限是023），但实际上Linux默认的权限是比较合理的，尽量不要改。

--文件搜索命令：find （应该尽量少用find搜索，因为搜索会占用大量系统资源）
                在windows下建议用Everything，只支持ntfs分区。
    命令名称：find
    命令所在路径：/bin/find
    执行权限：所有用户
    语法：find [搜索范围] [匹配条件]
    功能描述：文件搜索
    范例：
        $ find /etc -name init
            在目录/etc中查找文件init（这是一个精准搜索，只有文件名完全匹配才能被找出来）
            -iname 不区分大小写
        $ find /etc -name *init*    #搜索文件名包含init的文件
        $ find /etc -name init*
        $ find /etc -name init???
        $ find /etc -iname init???

        $ find / -size +204800
            在根目录下查找大于100MB的文件
            +n 大于     -n 小于       n 等于
            注意：这里的n 是用字符块来换算的，Linux中1个字符块是512个字节，也就是0.5K
                    数据块是Linux存储数据的最小单位。

        $ find /home -user shenchao
            在根目录下查找所有者为shenchao的文件
            -group 根据所属组查找

        $ find /etc -cmin -5
            在/etc下查找5分钟内被修改过属性的文件和目录
            -5  这里的减号是指多少时间之内， + 就表示超过多少时间。
            -amin 访问时间（access）
            -cmin 文件属性（change） (ls可以看到的信息就是文件属性）
            -mmin 文件内容（modify）

        $ find /etc -size +163840 -a -size -204800
            在/etc下查找大于80MB小于100MB的文件
            -a 两个条件同时满足 （and)
            -o 两个条件满足任意一个即可 (or)

        $ find /etc -name inittab -exec ls -l {} \;
            在/etc下查找inittab文件并显示其详细信息
            -exec/-ok  命令  {}  \;     对搜索结果执行操作
            （ {} 存放find的结果    \ 转义符    ; 结束符    注意{}\之间有空格）

        $ find /etc -name init* -a -type f -exec ls -l {} \;
         ok 和 exec 的区别：ok需要一个一个确认
        $ find /home -user shenchao -ok rm {} \;

        -type 根据文件类型查找
            f 文件    d 目录    l 软链接文件
            -inum 根据i节点查找

            i节点可用 ls -i  可查看
            例如一些特殊的文件名，不知道如何创造出来的，无法输入文件名，这时就可以用i结点来进行操作，比如删除。
            find . -inum 31531  -exec rm {} \;   （其中31531是要查找删除的文件i节点）

        $ find /etc -name init* -a -type f
            查找/etc 目录下的init开头的文件，不包括文件夹（-a 并且 ，-type f 文件类型）
        $ find /etc -name init* -a -type d

--文件搜索命令：locate
    命令名称：locate
    命令所在路径：/usr/bin/locate
    执行权限：所有用户
    语法：locate 文件名
    功能描述：在文件资料库中查找文件
    范例：$ locate inittab

--文件搜索命令：which
    命令名称：which
    命令所在路径：/usr/bin/which
    执行权限：所有用户
    语法：which 命令
    功能描述：搜索命令所在目录及别名信息
    范例：$ which ls

--文件搜索命令：whereis
    命令名称：whereis
    命令所在路径：/usr/bin/whereis
    执行权限：所有用户
    语法：whereis [命令名称]
    功能描述：搜索命令所在目录及帮助文档路径
    范例：$ whereis ls

--文件搜索命令：grep
    命令名称：grep
    命令所在路径：/bin/grep
    执行权限：所有用户
    语法：grep -iv [指定字串] [文件]
    功能描述：在文件中搜寻字串匹配的行并输出
            -i 不区分大小写
            -v 排除指定字串
    范例：# grep mysql /root/install.log

--帮助命令：man
    命令名称：man
    命令英文原意：manual
    命令所在路径：/usr/bin/man
    执行权限：所有用户
    语法：man [命令或配置文件]
    功能描述：获得帮助信息
    范例：$ man ls    查看ls命令的帮助信息
    $ man services    查看配置文件services的帮助信息

--帮助命令：help
    命令名称：help
    命令所在路径：Shell内置命令
    执行权限：所有用户
    语法：help 命令
    功能描述：获得Shell内置命令的帮助信息
    范例：$ help umask    查看umask命令的帮助信息

--用户管理命令：useradd
    命令名称：useradd
    命令所在路径：/usr/sbin/useradd
    执行权限：root
    语法：useradd 用户名
    功能描述：添加新用户
    范例：$ useradd yangmi

--用户管理命令：passwd
    命令名称：passwd
    命令所在路径：/usr/bin/passwd
    执行权限：所有用户
    语法：passwd 用户名
    功能描述：设置用户密码
    范例： $ passwd yangmi

--用户管理命令：who
    命令名称：who
    命令所在路径：/usr/bin/who
    执行权限：所有用户
    语法：who
    功能描述：查看登录用户信息
    范例： $ who

--用户管理命令：w
    命令名称：w
    命令所在路径：/usr/bin/w
    执行权限：所有用户
    语法：w
    功能描述：查看登录用户详细信息
    范例： $ w

--压缩解压命令：gzip
    命令名称：gzip
    命令英文原意：GNU zip
    命令所在路径：/bin/gzip
    执行权限：所有用户
    语法：gzip [文件]
    功能描述：压缩文件
    压缩后文件格式：.gz

--压缩解压命令：gunzip
    命令名称：gunzip
    命令英文原意：GNU unzip
    命令所在路径：/bin/gunzip
    执行权限：所有用户
    语法：gunzip [压缩文件]
    功能描述：解压缩.gz的压缩文件
    范例： $ gunzip boduo.gz

--压缩解压命令：tar
    命令名称：tar
    命令所在路径：/bin/tar
    执行权限：所有用户
    语法：tar 选项[-zcf] [压缩后文件名] [目录]
        -c 打包
        -v 显示详细信息
        -f 指定文件名
        -z 打包同时压缩
    功能描述：打包目录
    压缩后文件格式：.tar.gz
    范例：
        $ tar -zcf Japan.tar.gz Japan
        将目录Japan打包并压缩为.tar.gz文件

    tar命令解压缩语法：
        -x 解包
        -v 显示详细信息
        -f 指定解压文件
        -z 解压缩
        范例：$ tar -zxvf Japan.tar.gz

--压缩解压命令：zip
    命令名称：zip
    命令所在路径：/usr/bin/zip
    执行权限：所有用户
    语法：
        zip 选项[-r] [压缩后文件名] [文件或目录]
        -r 压缩目录
    功能描述：压缩文件或目录
    压缩后文件格式：.zip
    范例：
        $ zip buduo.zip boduo        压缩文件
        $ zip -r Japan.zip Japan        压缩目录

--压缩解压命令：unzip
    命令名称：unzip
    命令所在路径：/usr/bin/unzip
    执行权限：所有用户
    语法：unzip [压缩文件]
    功能描述：解压.zip的压缩文件
    范例：$ unzip test.zip

--压缩解压命令：bzip2
    命令名称：bzip2
    命令所在路径：/usr/bin/bzip2
    执行权限：所有用户
    语法： bzip2 选项[-k] [文件]
            -k 产生压缩文件后保留原文件
    功能描述：压缩文件
    压缩后文件格式：.bz2
    范例：$ bzip2 -k boduo
         $ tar -cjf Japan.tar.bz2 Japan

--压缩解压命令：bunzip2
    命令名称：bunzip2
    命令所在路径：/usr/bin/bunzip2
    执行权限：所有用户
    语法： bunzip2 选项[-k] [压缩文件]
            -k 解压缩后保留原文件
    功能描述：解压缩
    范例：$ bunzip2 -k boduo.bz2
           $ tar -xjf Japan.tar.bz2

--网络命令：write
    指令名称：write
    指令所在路径：/usr/bin/write
    执行权限：所有用户
    语法：write <用户名>
    功能描述：给用户发信息，以Ctrl+D保存结束
    范例： # write linzhiling

--网络命令：wall
    指令名称：wall
    命令英文原意：write all
    指令所在路径：/usr/bin/wall
    执行权限：所有用户
    语法：wall [message]
    功能描述：发广播信息
    范例： # wall ShenChao is a honest man!

--网络命令：ping
    命令名称：ping
    命令所在路径：/bin/ping
    执行权限：所有用户
    语法：ping 选项IP地址
        -c 指定发送次数
    功能描述：测试网络连通性
    范例： # ping 192.168.1.156

--网络命令：ifconfig
    命令名称：ifconfig
    命令英文原意：interface configure
    命令所在路径：/sbin/ifconfig
    执行权限：root
    语法：ifconfig 网卡名称IP地址
    功能描述：查看和设置网卡信息
    范例：# ifconfig eth0 192.168.8.250

--网络命令：mail
    命令名称：mail
    命令所在路径：/bin/mail
    执行权限：所有用户
    语法：mail [用户名]
    功能描述：查看发送电子邮件
    范例：# mail root

--网络命令：last
    命令名称：last
    命令所在路径：/usr/bin/last
    执行权限：所有用户
    语法：last
    功能描述：列出目前与过去登入系统的用户信息
    范例：# last

--网络命令：lastlog
    命令名称：lastlog
    命令所在路径：/usr/bin/lastlog
    执行权限：所有用户
    语法：lastlog
    功能描述：检查某特定用户上次登录的时间
    范例：  # lastlog
            # lastlog -u 502

--网络命令：traceroute
    命令名称：traceroute
    命令所在路径：/bin/traceroute
    执行权限：所有用户
    语法：traceroute
    功能描述：显示数据包到主机间的路径
    范例：# traceroute www.lampbrother.net

--网络命令：netstat
    命令名称：netstat
    命令所在路径：/bin/netstat
    执行权限：所有用户
    语法：netstat [选项]
    功能描述：显示网络相关信息
    选项：
        -t ： TCP协议
        -u ： UDP协议
        -l ： 监听
        -r ： 路由
        -n ： 显示IP地址和端口号
    范例：
        # netstat -tlun 查看本机监听的端口
        # netstat -an 查看本机所有的网络连接
        # netstat -rn 查看本机路由表

--网络命令：setup
    命令名称：setup
    命令所在路径：/usr/bin/setup
    执行权限：root
    语法：setup
    功能描述：配置网络
    范例：# setup

--挂载命令
    命令名称：mount
    命令位置：/bin/mount
    执行权限：所有用户
    命令语法：mount [-t 文件系统] 设备文件名挂载点
    范例：# mount -t iso9660 /dev/sr0 /mnt/cdrom

--关机重启命令
    1、shutdown命令
        [root@localhost ~]# shutdown [选项] 时间
        选项：
        -c：取消前一个关机命令
        -h：关机
        -r：重启

    2、其他关机命令
        [root@localhost ~]# halt
        [root@localhost ~]# poweroff
        [root@localhost ~]# init 0

    3、其他重启命令
        [root@localhost ~]# reboot
        [root@localhost ~]# init 6

    4、系统运行级别
        0 关机
        1单用户
        2不完全多用户，不含NFS服务
        3完全多用户
        4未分配
        5图形界面
        6重启
            [root@localhost ~]# cat /etc/inittab
            #修改系统默认运行级别
            id:3:initdefault:
            [root@localhost ~]# runlevel
            #查询系统运行级别

    5、退出登录命令
        [root@localhost ~]# logout

--Vim常用操作
    Vim是一个功能强大的全屏幕文本编辑器，是Linux/UNIX上最常用的文本编辑器，
    它的作用是建立、编辑、显示文本文件。
    Vim 没有菜单，只有命令。
    www.vim.org

    Vim 工作模式：
        命令模式    插入模式    编辑模式
进入 vi filename
退出
输入:wq
输入i a o
ESC键：
命令以回车
结束运行

    插入命令：
        O 在光标上插入新行
        o 在光标下插入新行
        I 在光标所在行行首插入
        i 在光标所在字符前插入
        A 在光标所在行尾插入
        a 在光标所在字符后插入

    定位命令：
        : set nu 设置行号
        : set nonu 取消行号
        gg  到第一行
        G  到最后一行
        nG 到第n行
        :n 到第n行
        $ 移至行尾
        0 移至行首

    删除命令：
        :n1,n2d 删除指定范围的行
        D 删除光标所在处到行尾内容
        dG 删除光标所在行到文件末尾内容
        dd 删除光标所在行，ndd删除n行
        nx 删除光标所在处后n个字符
        x 删除光标所在处字符

    复制和剪切命令：
        yy 复制当前行
        nyy 复制当前行以下n行
        dd 剪切当前行
        ndd 剪切当前行以下n行
        p、P 粘贴在当前光标所在行下或行上

    替换和取消命令：
        r 取代光标所在处字符
        R 从光标所在处开始替换字符，按Esc结束
        u 取消上一步操作

    搜索和搜索替换命令：
         /string 搜索指定字符串
                 搜索时忽略大小写:set ic
        n 搜索指定字符串的下一个出现位置
        :%s/old/new/g 全文替换指定字符串
        :n1,n2s/old/new/g 在一定范围内替换指定字符串

    保存和退出命令：
        :wq! 保存修改并退出（文件所有者及root可使用）
        :q! 不保存修改退出
        ZZ 快捷键，保存修改并退出
        :wq 保存修改并退出
        :w new_filename 另存为指定文件
        :w 保存修改

--Vim使用技巧
    导入命令执行结果:r !命令
     定义快捷键:map 快捷键触发命令
        范例：  : map ^P I#<ESC>
                : map ^B 0x
     连续行注释:n1,n2s/^/#/g
                :n1,n2s/^#//g
                :n1,n2s/^/\/\//g
     替换:ab mymail samlee@lampbrother.net

--软件包管理简介
    1、软件包分类
        源码包
        脚本安装包
        二进制包（RPM包、系统默认包）

    2、源码包
        源码包的优点是：
            开源，如果有足够的能力，可以修改源代码
            可以自由选择所需的功能
            软件是编译安装，所以更加适合自己的系统，更加稳定也效率更高
            卸载方便

        源码包的缺点
            安装过程步骤较多，尤其安装较大的软件集合时（如LAMP环境搭建），容易出现拼写错误
            编译过程时间较长，安装比二进制安装时间长
            因为是编译安装，安装过程中一旦报错新手很难解决

    3、RPM包
        二进制包的优点
            包管理系统简单，只通过几个命令就可以实现包的安装、升级、查询和卸载
            安装速度比源码包安装快的多

        二进制包缺点：
            经过编译，不再可以看到源代码
            功能选择不如源码包灵活
            依赖性

--RPM包管理-rpm命令管理
    1、RPM包命名原则
        httpd-2.2.15-15.el6.centos.1.i686.rpm
        httpd软件包名
        2.2.15软件版本
        15软件发布的次数
        el6.centos适合的Linux平台
        i686适合的硬件平台
        rpmrpm包扩展名

    2、RPM包依赖性
        树形依赖：abc
        环形依赖：abca
        模块依赖：模块依赖查询网站：www.rpmfind.net

--RPM包管理-yum在线管理
    1、包全名与包名
         包全名：操作的包是没有安装的软件包时，使用包全名。而且要注意路径
         包名：操作已经安装的软件包时，使用包名。
        是搜索/var/lib/rpm/中的数据库

    2、RPM安装
        rpm –ivh 包全名
        选项：
            -i（install） 安装
            -v（verbose） 显示详细信息
            -h（hash） 显示进度
            --nodeps 不检测依赖性

    3、RPM包升级
        rpm -Uvh 包全名
        选项：
            -U（upgrade） 升级

    3、卸载
        rpm -e 包名
        选项：
            -e（erase） 卸载
            --nodeps 不检查依赖性

--rpm命令管理-RPM包查询
    1、查询是否安装
    [root@localhost ~]# rpm -q 包名
    #查询包是否安装
    选项：
        -q查询（query）
    [root@localhost ~]# rpm –qa
    #查询所有已经安装的RPM包
    选项：
        -a所有（all）

    2、查询软件包详细信息
    [root@localhost ~]# rpm –qi 包名
    选项：
        -i查询软件信息（information）
        -p查询未安装包信息（package）

    3、查询包中文件安装位置
    [root@localhost ~]# rpm –ql 包名
    选项：
        -l列表（list）
        -p查询未安装包信息（package）

    4、查询系统文件属于哪个RPM包
    [root@localhost ~]# rpm –qf 系统文件名
    选项：
        -f查询系统文件属于哪个软件包（file）

    5、查询软件包的依赖性
    [root@localhost ~]# rpm –qR 包名
    选项：
        -R查询软件包的依赖性（requires）
        -p查询未安装包信息（package）

--rpm命令管理-校验与文件提取
    1、RPM包校验
    [root@localhost ~]# rpm –V 已安装的包名
    选项：
        -V 校验指定RPM包中的文件（verify）

    验证内容中的8个信息的具体内容如下：
         S 文件大小是否改变
         M 文件的类型或文件的权限（rwx）是否被改变
         5 文件MD5校验和是否改变（可以看成文件内容是否改变）
         D 设备的中，从代码是否改变
         L 文件路径是否改变
         U 文件的属主（所有者）是否改变
         G 文件的属组是否改变
         T 文件的修改时间是否改变

    文件类型
         c 配置文件（config file）
         d 普通文档（documentation）
         g “鬼”文件（ghost file），很少见，就是该文件不应该被这个RPM包包含
         l 授权文件（license file）
         r 描述文件（read me）

    2、RPM包中文件提取
        [root@localhost ~]# rpm2cpio 包全名| \
        cpio -idv .文件绝对路径
        rpm2cpio
        #将rpm包转换为cpio格式的命令
        cpio
        #是一个标准工具，它用于创建软件档案文件和从档案文件中提取文件

        [root@localhost ~]# cpio 选项< [文件|设备]
        选项：
            -i：copy-in模式，还原
            -d：还原时自动新建目录
            -v：显示还原过程

        [root@localhost ~]# rpm -qf /bin/ls
        #查询ls命令属于哪个软件包
        [root@localhost ~]# mv /bin/ls /tmp/
        #造成ls命令误删除假象
        [root@localhost ~]# rpm2cpio /mnt/cdrom/Packages/coreutils-
        8.4-19.el6.i686.rpm | cpio -idv ./bin/ls
        #提取RPM包中ls命令到当前目录的/bin/ls下
        [root@localhost ~]# cp /root/bin/ls /bin/
        #把ls命令复制会/bin/目录，修复文件丢失

--RPM包管理-yum在线管理
--IP地址配置和网络yum源
    1、IP地址配置
        [root@localhost ~]# setup
        #使用setup工具
        [root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0
        把ONBOOT=“no” 改为
        ONBOOT=“yes“
        #启动网卡
        [root@localhost ~]# service network restart
        #重启网络服务

    2、网络yum源
        [root@localhost yum.repos.d]# vi /etc/yum.repos.d/CentOS-Base.repo
        [base] 容器名称，一定要放在[]中
        name容器说明，可以自己随便写
        mirrorlist镜像站点，这个可以注释掉
        baseurl我们的yum源服务器的地址。默认是CentOS官方的yum源服务器，是可以使用的，如果你觉得慢可以改成你喜欢的yum源地址
        enabled此容器是否生效，如果不写或写成enable=1都是生效，写成enable=0就是不生效
        gpgcheck如果是1是指RPM的数字证书生效，如果是0则不生效
        gpgkey数字证书的公钥文件保存位置。不用修改

--yum命令
    1、常用yum命令
        1）查询
            [root@localhost yum.repos.d]# yum list
            #查询所有可用软件包列表
            [root@localhost yum.repos.d]# yum search 关键字
            #搜索服务器上所有和关键字相关的包
        2）安装
            [root@localhost yum.repos.d]# yum –y install 包名
            选项：
                install 安装
                -y 自动回答yes
        3）升级
            [root@localhost yum.repos.d]# yum -y update 包名
            选项：
                update 升级
                -y 自动回答yes
        4）卸载
            [root@localhost yum.repos.d]# yum -y remove 包名
            选项：
                remove 卸载
                -y 自动回答yes

    2、YUM软件组管理命令
        [root@localhost ~]# yum grouplist
        #列出所有可用的软件组列表
        [root@localhost ~]# yum groupinstall 软件组名
        #安装指定软件组，组名可以由grouplist查询出来
        [root@localhost ~]# yum groupremove 软件组名
        #卸载指定软件组

--光盘yum源搭建
    光盘yum源搭建步骤
        1）挂载光盘
            [root@localhost ~]# mount /dev/cdrom /mnt/cdrom/
        2）让网络yum源文件失效
            [root@localhost ~]# cd /etc/yum.repos.d/
            [root@localhost yum.repos.d]# mv CentOS-Base.repo \
            CentOS-Base.repo.bak
            [root@localhost yum.repos.d]# mv CentOS-Debuginfo.repo \
            CentOS-Debuginfo.repo.bak
            [root@localhost yum.repos.d]# mv CentOS-Vault.repo \
            CentOS-Vault.repo.bak
        3）修改光盘yum源文件
            [root@localhost yum.repos.d]# vim CentOS-Media.repo
            [c6-media]
            name=CentOS-$releasever - Media
            baseurl=file:///mnt/cdrom
            #地址为你自己的光盘挂载地址
            # file:///media/cdrom/
            # file:///media/cdrecorder/
            #注释这两个不存在的地址
            gpgcheck=1
            enabled=1
            #把enabled=0改为enabled=1，让这个yum源配置文件生效
            gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

--源码包和RPM包的区别
    1、区别
         安装之前的区别：概念上的区别
         安装之后的区别：安装位置不同

    2、RPM包安装位置
         是安装在默认位置中
        RPM包默认安装路径
            /etc/ 配置文件安装目录
            /usr/bin/ 可执行的命令安装目录
            /usr/lib/ 程序所使用的函数库保存位置
            /usr/share/doc/ 基本的软件使用手册保存位置
            /usr/share/man/ 帮助文件保存位置

    3、源码包安装位置
         安装在指定位置当中，一般是/usr/local/软件名/

    4、安装位置不同带来的影响
        RPM包安装的服务可以使用系统服务管
        理命令（service）来管理，例如RPM包安
        装的apache的启动方法是：
             /etc/rc.d/init.d/httpd start
             service httpd start
         而源码包安装的服务则不能被服务管理命令管理，因为没有安装到默认路径中。
        所以只能用绝对路径进行服务的管理，如：
         /usr/local/apache2/bin/apachectl start

--源码包安装过程
    1、安装准备
         安装C语言编译器
         下载源码包
        http://mirror.bit.edu.cn/apache/httpd/
    2、安装注意事项
         源代码保存位置：/usr/local/src/
         软件安装位置：/usr/local/
         如何确定安装过程报错：
             安装过程停止
             并出现error、warning或no的提示
    3、源码包安装过程
         下载源码包
         解压缩下载的源码包
         进入解压缩目录
         ./configure 软件配置与检查
             定义需要的功能选项。
             检测系统环境是否符合安装要求。
             把定义好的功能选项和检测系统环境的信息
            都写入Makefile文件，用于后续的编辑。
         make 编译
         make clean
         make install 编译安装
    4、源码包的卸载
         不需要卸载命令，直接删除安装目录即可。
        不会遗留任何垃圾文件。

--脚本安装包
    1、脚本安装包
         脚本安装包并不是独立的软件包类型，常见安装的是源码包。
         是人为把安装过程写成了自动安装的脚本，
        只要执行脚本，定义简单的参数，就可以完成安装。
         非常类似于Windows下软件的安装方式。
    2、Webmin的作用
        Webmin 是一个基于Web 的Linux 系统管理界面。您就可以通过图形化的方式设置
        用户帐号、Apache、DNS、文件共享等服务。
    3、Webmin安装过程
         下载软件
             http://sourceforge.net/projects/webadmin/files/webmin/
         解压缩，并进入加压缩目录
         执行安装脚本

--用户信息文件/etc/passwd
    1、用户管理简介
         所以越是对服务器安全性要求高的服务器，越需要建立合理的用户权限等级制度和
        服务器操作规范。
         在Linux中主要是通过用户配置文件来查看和修改用户信息

    2、/etc/passwd
         第1字段：用户名称
         第2字段：密码标志
         第3字段：UID（用户ID）
             0： 超级用户
             1-499： 系统用户（伪用户）
             500-65535： 普通用户
         第4字段：GID（用户初始组ID）
         第5字段：用户说明
         第6字段：家目录
             普通用户：/home/用户名/
             超级用户：/root/
         第7字段：登录之后的Shell

    3、初始组和附加组
         初始组：就是指用户一登录就立刻拥有这个用户组的相关权限，每个用户的初
        始组只能有一个，一般就是和这个用户的用户名相同的组名作为这个用户的初始组。
         附加组：指用户可以加入多个其他的用户组，并拥有这些组的权限，
        附加组可以有多个。

    4、Shell是什么
         Shell就是Linux的命令解释器。
         在/etc/passwd当中，除了标准Shell是/bin/bash之外，
        还可以写如/sbin/nologin，/usr/bin/passwd等。

--影子文件/etc/shadow
    1、影子文件/etc/shadow
         第1字段：用户名
         第2字段：加密密码
             加密算法升级为SHA512散列加密算法
             如果密码位是“!!”或“*”代表没有密码，不能登录
         第3字段：密码最后一次修改日期
             使用1970年1月1日作为标准时间，每过一天时间戳加1
         第4字段：两次密码的修改间隔时间（和第3字段相比）
         第5字段：密码有效期（和第3字段相比）
         第6字段：密码修改到期前的警告天数（和第5字段相比）
         第7字段：密码过期后的宽限天数（和第5字段相比）
             0：代表密码过期后立即失效
             -1：则代表密码永远不会失效。
         第8字段：账号失效时间
             要用时间戳表示
         第9字段：保留

    2、时间戳换算
         把时间戳换算为日期
             date -d "1970-01-01 16066 days"
         把日期换算为时间戳
             echo $(($(date --date="2014/01/06" +%s)/86400+1))

--组信息文件/etc/group和组密码文件/etc/gshadow
    1、组信息文件/etc/group
         第一字段：组名
         第二字段：组密码标志
         第三字段：GID
         第四字段：组中附加用户
    2、组密码文件/etc/gshadow
        第一字段：组名
        第二字段：组密码
        第三字段：组管理员用户名
        第四字段：组中附加用户

--用户管理相关文件
    1、用户的家目录
         普通用户：/home/用户名/，所有者和所属组都是此用户，权限是700
         超级用户：/root/，所有者和所属组都是root用户，权限是550
    2、用户的邮箱
         /var/spool/mail/用户名/
    3、用户模板目录
         /etc/skel/

--用户添加命令useradd
    1、useradd命令格式
        [root@localhost ~]#useradd [选项] 用户名
        选项：
            -u UID： 手工指定用户的UID号
            -d 家目录： 手工指定用户的家目录
            -c 用户说明： 手工指定用户的说明
            -g 组名： 手工指定用户的初始组
            -G 组名： 指定用户的附加组
            -s shell： 手工指定用户的登录shell。默认是/bin/bash
    2、添加默认用户
         [root@localhost ~]# useradd lamp
             [root@localhost ~]# grep "lamp" /etc/passwd
             [root@localhost ~]# grep "lamp" /etc/shadow
             [root@localhost ~]# grep "lamp" /etc/group
             [root@localhost ~]# grep "lamp" /etc/gshadow
             [root@localhost ~]# ll -d /home/lamp/
             [root@localhost ~]# ll /var/spool/mail/lamp
    3、指定选项添加用户
         groupadd lamp1
         useradd -u 550 -g lamp1 -G root -d /home/lamp1 \
        -c "test user" -s /bin/bash lamp1
    4、用户默认值文件
         /etc/default/useradd
             GROUP=100 #用户默认组
             HOME=/home #用户家目录
             INACTIVE=-1 #密码过期宽限天数（7）
             EXPIRE= #密码失效时间（8）
             SHELL=/bin/bash #默认shell
             SKEL=/etc/skel #模板目录
             CREATE_MAIL_SPOOL=yes #是否建立邮箱
         /etc/login.defs
             PASS_MAX_DAYS 99999 #密码有效期（5）
             PASS_MIN_DAYS 0 #密码修改间隔（4）
             PASS_MIN_LEN 5 #密码最小5位（PAM）
             PASS_WARN_AGE 7 #密码到期警告（6）
             UID_MIN 500 #最小和最大UID范围
             GID_MAX 60000
             ENCRYPT_METHOD SHA512 #加密模式

--修改用户密码passwd
    1、passwd命令格式
        [root@localhost ~]#passwd [选项] 用户名
        选项：
            -S 查询用户密码的密码状态。仅root用户可用。
            -l 暂时锁定用户。仅root用户可用
            -u 解锁用户。仅root用户可用
            --stdin 可以通过管道符输出的数据作为用户的密码。
    2、查看密码状态
         [root@localhost ~]# passwd -S lamp
            lamp PS 2013-01-06 0 99999 7 -1
            #用户名 密码设定时间（2013-01-06） 密码修改间隔时间（0）
            #密码有效期（99999 ） 警告时间（7） 密码不失效（-1）
    3、锁定用户和解锁用户
         [root@localhost ~]# passwd -l lamp
         [root@localhost ~]# passwd -u lamp
    4、使用字符串作为用户的密码
         [root@localhost ~]# echo "123" | passwd --stdin lamp

--修改用户信息usermod,修改用户密码状态chage
    1、修改用户信息usermod
        [root@localhost ~]#usermod [选项] 用户名
        选项：
            -u UID： 修改用户的UID号
            -c 用户说明： 修改用户的说明信息
            -G 组名： 修改用户的附加组
            -L： 临时锁定用户（Lock）
            -U： 解锁用户锁定（Unlock）
         [root@localhost ~]# usermod -c "test user" lamp
        #修改用户的说明
         [root@localhost ~]# usermod -G root lamp
        #把lamp用户加入root组
         [root@localhost ~]# usermod -L lamp
        #锁定用户
         [root@localhost ~]# usermod -U lamp
        #解锁用户

    2、修改用户密码状态chage
        [root@localhost ~]#chage [选项] 用户名
        选项：
            -l： 列出用户的详细密码状态
            -d 日期： 修改密码最后一次更改日期（shadow3字段）
            -m 天数： 两次密码修改间隔（4字段）
            -M 天数： 密码有效期（5字段）
            -W 天数： 密码过期前警告天数（6字段）
            -I 天数： 密码过后宽限天数（7字段）
            -E 日期： 账号失效时间（8字段）
         [root@localhost ~]# chage -d 0 lamp
        #这个命令其实是把密码修改日期归0了（shadow第3字段）
        #这样用户一登陆就要修改密码

--删除用户userdel,用户切换命令su
    1、删除用户userdel
        [root@localhost ~]# userdel [-r] 用户名
        选项：
           -r 删除用户的同时删除用户家目录
    手工删除用户
         [root@localhost ~]# vi /etc/passwd
         [root@localhost ~]# vi /etc/shadow
         [root@localhost ~]# vi /etc/group
         [root@localhost ~]# vi /etc/gshadow
         [root@localhost ~]# rm -rf /var/spool/mail/lamp
         [root@localhost ~]# rm -rf /home/lamp/
    2、查看用户ID
       [root@localhost ~]# id 用户名
    3、切换用户身份su
        [root@localhost ~]# su [选项] 用户名
        选项：
            - ： 选项只使用“-”代表连带用户的环境变量一起切换
            -c 命令： 仅执行一次命令，而不切换用户身份
         [lamp@localhost ~]$ su – root
        #切换成root
         [lamp@localhost ~]$ su - root -c "useradd user3"
        #不切换成root，但是执行useradd命令添加user1用户

--用户组管理命令

--ACL权限简介与开启
    1、ACL权限简介
    2、查看分区ACL权限是否开启
        [root@localhost ~]# dumpe2fs -h /dev/sda3
        #dumpe2fs命令是查询指定分区详细文件系统信息的命令
        选项：
            -h 仅显示超级块中信息，而不显示磁盘块组的详细信 息
    3、临时开启分区ACL权限
        [root@localhost ~]# mount -o remount,acl /
        #重新挂载根分区，并挂载加入acl权限
    4、永久开启分区ACL权限
        [root@localhost ~]# vi /etc/fstab
        UUID=c2ca6f57-b15c-43ea-bca0-f239083d8bd2 / ext4 defaults,acl 1 1
        #加入acl
        [root@localhost ~]# mount -o remount /
        #重新挂载文件系统或重启动系统，使修改生效

--查看与设定ACL权限
    1、查看ACL命令
        [root@localhost ~]# getfacle 文件名
        #查看acl权限
    2、设定ACL权限的命令
        [root@localhost ~]# setfacl 选项 文件名
        选项：
            -m 设定ACL权限
            -x 删除指定的ACL权限
            -b 删除所有的ACL权限
            -d 设定默认ACL权限。
            -k 删除默认ACL权限
            -R 递归设定ACL权限。
    3、给用户设定ACL权限
        [root@localhost ~]# useradd zhangsan
        [root@localhost ~]# useradd lisi
        [root@localhost ~]# useradd st
        [root@localhost ~]# groupadd tgroup
        [root@localhost ~]# mkdir /project
        [root@localhost ~]# chown root:tgroup /project/
        [root@localhost ~]# chmod 770 /project/
        [root@localhost ~]# setfacl -m u:st:rx /project/
        #给用户st赋予r-x权限，使用“u:用户名:权限”格式
    4、给用户组设定ACL权限
        [root@localhost /]# groupadd tgroup2
        [root@localhost /]# setfacl -m g:tgroup2:rwx project/
        #为组tgroup2分配ACl权限。使用“g:组名:权限”格式

--最大有效权限与删除ACL权限
    1、最大有效权限mask
         mask是用来指定最大有效权限的。如果
        我给用户赋予了ACL权限，是需要和
        mask的权限“相与”才能得到用户的真
        正权限

        A B and
        r r r
        r - -
        - r -
        - - -
        修改最大有效权限
        [root@localhost /]# setfacl -m m:rx 文件名
        #设定mask权限为r-x。使用“m:权限”格式
    2、删除ACL权限
        [root@localhost /]# setfacl -x u:用户名 文件名
        #删除指定用户的ACL权限
        [root@localhost /]# setfacl -x g:组名 文件名
        #删除指定用户组的ACL权限
        [root@localhost /]# setfacl -b 文件名
        #会删除文件的所有的ACL权限

--默认ACL权限和递归ACL权限
    1、递归ACL权限
         递归是父目录在设定ACL权限时，所有的子文
        件和子目录也会拥有相同的ACL权限。
         setfacl -m u:用户名:权限 -R 文件名
    2、默认ACL权限
         默认ACL权限的作用是如果给父目录设定
        了默认ACL权限，那么父目录中所有新建
        的子文件都会继承父目录的ACL权限。
         setfacl -m d:u:用户名:权限 文件名

--文件特殊权限SetUID
    1、SetUID的功能
         只有可以执行的二进制程序才能设定SUID权限
         命令执行者要对该程序拥有x（执行）权限
         命令执行者在执行该程序时获得该程序文件属
        主的身份（在执行程序的过程中灵魂附体为文
        件的属主）
         SetUID权限只在该程序执行过程中有效，也就
        是说身份改变只在程序执行过程中有效
         passwd命令拥有SetUID权限，所以普通可以修
        改自己的密码
        [root@localhost ~]# ll /usr/bin/passwd
        -rwsr-xr-x. 1 root root 25980 2月 22 2012 /usr/bin/passwd
         cat命令没有SetUID权限，所以普通用户不能查
        看/etc/shadow文件内容
        [root@localhost ~]# ll /bin/cat
        -rwxr-xr-x 1 root root 47976 6月 22 2012 /bin/cat

    2、设定SetUID的方法
         4代表SUID
             chmod 4755 文件名
             chmod u+s 文件名
    3、取消SetUID的方法
         chmod 755 文件名
        chmod u-s 文件名
    4、危险的SetUID
         关键目录应严格控制写权限。比如“/”
        、“/usr”等
         用户的密码设置要严格遵守密码三原则
         对系统中默认应该具有SetUID权限的文件
        作一列表，定时检查有没有这之外的文件
        被设置了SetUID权限

--文件特殊权限SetGID
    1、SetGID针对文件的作用
         只有可执行的二进制程序才能设置SGID权限
         命令执行者要对该程序拥有x（执行）权限
         命令执行在执行程序的时候，组身份升级为该
        程序文件的属组
         SetGID权限同样只在该程序执行过程中有效，
        也就是说组身份改变只在程序执行过程中有效
        [root@localhost ~]# ll /usr/bin/locate
        -rwx--s--x 1 root slocate 35612 8月 24 2010 /usr/bin/locate
        [root@localhost ~]# ll /var/lib/mlocate/mlocate.db
        -rw-r----- 1 root slocate 1838850 1月 20 04:29 /var/lib/mlocate/mlocate.db
         /usr/bin/locate是可执行二进制程序，可以赋予
        SGID
         执行用户lamp对/usr/bin/locate命令拥有执行权限
         执行/usr/bin/locate命令时，组身份会升级为slocate
        组，而slocate组对/var/lib/mlocate/mlocate.db数据
        库拥有r权限，所以普通用户可以使用locate命令
        查询mlocate.db数据库
         命令结束，lamp用户的组身份返回为lamp组

    2、SetGID针对目录的作用
         普通用户必须对此目录拥有r和x权限，才
        能进入此目录
         普通用户在此目录中的有效组会变成此目
        录的属组
         若普通用户对此目录拥有w权限时，新建
        的文件的默认属组是这个目录的属组
        [root@localhost ~]# cd /tmp/
        [root@localhost tmp]# mkdir dtest
        [root@localhost tmp]# chmod g+s dtest
        [root@localhost tmp]# ll -d dtest/
        [root@localhost tmp]# chmod 777 dtest/
        [root@localhost tmp]# su – lamp
        [lamp@localhost ~]$ cd /tmp/dtest/
        [lamp@localhost dtest]$ touch abc
        [lamp@localhost dtest]$ ll

    3、设定SetGID
         2代表SGID
             chmod 2755 文件名
             chmod g+s 文件名
    4、取消SetGID
         chmod 755 文件名
        chmod g-s 文件名

--文件特殊权限Sticky BIT
    1、SBIT粘着位作用
         粘着位目前只对目录有效
         普通用户对该目录拥有w和x权限，即普通用户
        可以在此目录拥有写入权限
         如果没有粘着位，因为普通用户拥有w权限，
        所以可以删除此目录下所有文件，包括其他用
        户建立的文件。一但赋予了粘着位，除了root可
        以删除所有文件，普通用户就算拥有w权限，
        也只能删除自己建立的文件，但是不能删除其
        他用户建立的文件
        [root@localhost ~]# ll -d /tmp/
        drwxrwxrwt. 3 root root 4096 12月 13 11:22 /tmp/
    2、设置与取消粘着位
         设置粘着位
             chmod 1755 目录名
             chmod o+t 目录名
         取消粘着位
             chmod 777 目录名
             chmod o-t 目录名

--文件系统属性chattr权限
    1、chattr命令格式
        [root@localhost ~]# chattr [+-=] [选项] 文件或目录名
        +: 增加权限
        -: 删除权限
        =: 等于某权限
     选项
         i：如果对文件设置i属性，那么不允许对文件进行
        删除、改名，也不能添加和修改数据；如果对目录
        设置i属性，那么只能修改目录下文件的数据，但
        不允许建立和删除文件。
         a：如果对文件设置a属性，那么只能在文件中增加
        数据，但是不能删除也不能修改数据；如果对目录
        设置a属性，那么只允许在目录中建立和修改文件
        ，但是不允许删除
    2、查看文件系统属性
        [root@localhost ~]# lsattr 选项 文件名
        选项：
            -a 显示所有文件和目录
            -d 若目标是目录，仅列出目录本身的属
            性，而不是子文件的

--系统命令sudo权限
    1、sudo权限
         root把本来只能超级用户执行的命令赋予
        普通用户执行。
         sudo的操作对象是系统命令
    2、sudo使用
        [root@localhost ~]# visudo
        #实际修改的是/etc/sudoers文件
        root ALL=(ALL) ALL
        #用户名 被管理主机的地址=（可使用的身份） 授权命令（绝对路径）
        # %wheel ALL=(ALL) ALL
        #%组名 被管理主机的地址=（可使用的身份） 授权命令（绝对路径）
    3、授权sc用户可以重启服务器
        [root@localhost ~]# visudo
        sc ALL= /sbin/shutdown –r now
    4、普通用户执行sudo赋予的命令
        [root@localhost ~]# su – sc
        [sc@localhost ~]$ sudo -l
        #查看可用的sudo命令
        [lamp@localhost ~]$ sudo /sbin/shutdown -r now
        #普通用户执行sudo赋予的命令

--回顾分区和文件系统
    1、分区类型
        主分区：总共最多只能分四个
        扩展分区：只能有一个，也算作主分区的一种，也就是说主分区加扩展分区最多有四个。但是扩展分区不能存储数据和格式化，必须再划分成逻辑分区才能使用。
        逻辑分区：逻辑分区是在扩展分区中划分的，如果是IDE硬盘，Linux最多支持59个逻辑分区，如果是SCSI硬盘Linux最多支持11个逻辑分区
    2、分区表示方法
                                         ------------扩展分区-------------
        主分区1    主分区2    主分区3    逻辑分区1   逻辑分区2   逻辑分区3

        上图分区对应的设备文件名
            主分区1    /dev/sda1
            主分区2    /dev/sda2
            主分区3    /dev/sda3
            扩展分区    /dev/sda4
            逻辑分区1   /dev/sda5
            逻辑分区2   /dev/sda6
            逻辑分区3   /dev/sda7

                   ------------扩展分区-------------
        主分区1    逻辑分区1   逻辑分区2   逻辑分区3

        上图分区对应的设备文件名
            主分区1    /dev/sda1
            扩展分区    /dev/sda2
            逻辑分区1   /dev/sda5
            逻辑分区2   /dev/sda6
            逻辑分区3   /dev/sda7

    2、文件系统
        ext2：是ext文件系统的升级版本，Red Hat Linux7.2版本以前的系统默认都是
                ext2文件系统。1993年发布，最大支持16TB的分区和最大2TB的文件
                （1TB=1024GB=1024*1024KB）
        ext3：ext3文件系统是ext2文件系统的升级版本，最大的区别就是带日志功能，
                以在系统突然停止时提高文件系统的可靠性。支持最大16TB的分区和最
                大2TB的文件
        ext4：它是ext3文件系统的升级版。ext4 在性能、伸缩性和可靠性方面进行了
                大量改进。EXT4的变化可以说是翻天覆地的，比如向下兼容EXT3、最大
                1EB文件系统和16TB文件、无限数量子目录、Extents连续数据块概念、
                多块分配、延迟分配、持久预分配、快速FSCK、日志校验、无日志模式、
                在线碎片整理、inode增强、默认启用barrier等。是CentOS 6.3的默认
                文件系统 （1EB=1024PB=1024*1024TB）

--文件系统常用命令
--df命令、du命令、fsck命令和dump2fs命令
    1、文件系统查看命令df
        [root@localhost ~]# df [选项] [挂载点]
        选项：
            -a 显示所有的文件系统信息，包括特殊文件系统，如 /proc、/sysfs
            -h 使用习惯单位显示容量，如KB，MB或GB等
            -T 显示文件系统类型
            -m 以MB为单位显示容量
            -k 以KB为单位显示容量。默认就是以KB为单位
    2、统计目录或文件大小
        [root@localhost ~]# du [选项] [目录或文件名]
        选项：
            -a 显示每个子文件的磁盘占用量。默认只统计 子目录的磁盘占用量
            -h 使用习惯单位显示磁盘占用量，如KB，MB 或GB等
            -s 统计总占用量，而不列出子目录和子文件的 占用量

    du命令和df命令的区别
        df命令是从文件系统考虑的，不光要考虑文件占用的空间，还要统计被命令或
          程序占用的空间（最常见的就是文件已经删除，但是程序并没有释放空间）
        du命令是面向文件的，只会计算文件或目录占用的空间

    3、文件系统修复命令fsck
        [root@localhost ~]# fsck [选项] 分区设备文件名
        选项：
            -a： 不用显示用户提示，自动修复文件系统
            -y： 自动修复。和-a作用一致，不过有些文件系统只支 持-y
    4、显示磁盘状态命令dumpe2fs
        [root@localhost ~]# dumpe2fs 分区设备文件名

--文件系统常用命令
    1、查询与自动挂载
        [root@localhost ~]# mount [-l]
        #查询系统中已经挂载的设备，-l会显示卷标名称
        [root@localhost ~]# mount –a
        #依据配置文件/etc/fstab的内容，自动挂载

    2、挂载命令格式
        [root@localhost ~]# mount [-t 文件系统] [-L 卷标名] \
        [-o 特殊选项] 设备文件名 挂载点
        选项：
            -t 文件系统：加入文件系统类型来指定挂载的类型，可
            以ext3、ext4 、iso9660等文件系统
            -L 卷标名： 挂载指定卷标的分区，而不是安装设
            备文件名挂载
            -o 特殊选项：可以指定挂载的额外选项

        参数              说明
        atime/noatime 更新访问时间/不更新访问时间。访问分区文件时，是否更新文件
        的访问时间，默认为更新
        async/sync 异步/同步，默认为异步
        auto/noauto 自动/手动，mount –a命令执行时，是否会自动安装/etc/fstab文件
        内容挂载，默认为自动
        defaults 定义默认值，相当于rw,suid,dev,exec,auto,nouser,async这七个选项
        exec/noexec 执行/不执行，设定是否允许在文件系统中执行可执行文件，默认
        是exec允许
        remount 重新挂载已经挂载的文件系统，一般用于指定修改特殊权限
        rw/ro 读写/只读，文件系统挂载时，是否具有读写权限，默认是rw
        suid/nosuid 具有/不具有SUID权限，设定文件系统是否具有SUID和SGID的权
        限，默认是具有
        user/nouser 允许/不允许普通用户挂载，设定文件系统是否允许普通用户挂载，
        默认是不允许，只有root可以挂载分区
        usrquota 写入代表文件系统支持用户磁盘配额，默认不支持
        grpquota 写入代表文件系统支持组磁盘配额，默认不支持

        [root@localhost ~]# mount -o remount,noexec /home
        #重新挂载/boot分区，并使用noexec权限
        [root@localhost sh]# cd /home
        [root@localhost boot]# vi hello.sh
        [root@localhost boot]# chmod 755 hello.sh
        [root@localhost boot]# ./hello.sh
        [root@localhost boot]# mount -o remount,exec /home
        #记得改回来啊，要不会影响系统启动的

--挂载光盘与U盘
    1、挂载光盘
        [root@localhost ~]# mkdir /mnt/cdrom/
        #建立挂载点
        [root@localhost ~]# mount -t iso9660 /dev/cdrom /mnt/cdrom/
        #挂载光盘
        [root@localhost ~]# mount /dev/sr0 /mnt/cdrom/
    2、卸载命令
        [root@localhost ~]# umount 设备文件名或挂载点
        [root@localhost ~]# umount /mnt/cdrom
    3、挂载U盘
        [root@localhost ~]# fdisk –l
        #查看U盘设备文件名
        [root@localhost ~]# mount -t vfat /dev/sdb1 /mnt/usb/
        注意：Linux默认是不支持NTFS文件系统的

--支持NTFS文件系统
    1、下载NTFS-3G插件
        http://www.tuxera.com/community/ntfs-3gdownload/
    2、安装NTFS-3G
        [root@localhost ~]# tar -zxvf ntfs-3g_ntfsprogs-2013.1.13.tgz
        #解压
        [root@localhost ~]# cd ntfs-3g_ntfsprogs-2013.1.13
        #进入解压目录
        [root@localhost ntfs-3g_ntfsprogs-2013.1.13]# ./configure
        #编译器准备。没有指定安装目录，安装到默认位置中
        [root@localhost ntfs-3g_ntfsprogs-2013.1.13]# make
        #编译
        [root@localhost ntfs-3g_ntfsprogs-2013.1.13]# make install
        #编译安装
    3、使用
        [root@localhost ~]# mount -t ntfs-3g 分区设备文件名 挂载点

--fdisk命令分区过程
    1、添加新硬盘
    2、查看新硬盘
       [root@localhost ~]# fdisk -l
    3、使用fdisk命令分区
        [root@localhost ~]# fdisk /dev/sdb

    fdisk交互指令说明
        a 设置可引导标记
        b 编辑bsd磁盘标签
        c 设置DOS操作系统兼容标记
        d 删除一个分区
        l 显示已知的文件系统类型。82为Linux swap分区，83为Linux分区
        m 显示帮助菜单
        n 新建分区
        o 建立空白DOS分区表
        p 显示分区列表
        q 不保存退出
        s 新建空白SUN磁盘标签
        t 改变一个分区的系统ID
        u 改变显示记录单位
        v 验证分区表
        w 保存退出
        x 附加功能（仅专家）

    4、重新读取分区表信息
        [root@localhost ~]# partprobe
    5、格式化分区
        [root@localhost ~]# mkfs -t ext4 /dev/sdb1
    6、建立挂载点并挂载
        [root@localhost ~]# mkdir /disk1
        [root@localhost ~]# mount /dev/sdb1 /disk1/

--分区自动挂载与fstab文件修复
    1、/etc/fstab文件
         第一字段：分区设备文件名或UUID（硬盘通用唯一识别
        码）
         第二字段：挂载点
         第三字段：文件系统名称
         第四字段：挂载参数
         第五字段：指定分区是否被dump备份，0代表不备份，1
        代表每天备份，2代表不定期备份
         第六字段：指定分区是否被fsck检测，0代表不检测，其
        他数字代表检测的优先级，那么当然1的优先级比2高
    2、分区自动挂载
        [root@localhost ~]# vi /etc/fstab
        …省略部分输出…
        /dev/sdb5 /disk5 ext4 defaults 1 2
    3、/etc/fstab文件修复
        [root@localhost ~]# mount -o remount,rw /

--分配swap分区
    1、新建swap分区
       [root@localhost ~]# fdisk /dev/sdb
      别忘记把分区ID改为82
    2、格式化
      [root@localhost ~]# mkswap /dev/sdb1
    3、加入swap分区
        [root@localhost ~]# swapon /dev/sdb1
        #加入swap分区
        [root@localhost ~]# swapoff /dev/sdb1
        #取消swap分区
    4、swap分区开机自动挂载
        [root@localhost ~]# vi /etc/fstab
        /dev/sdb1 swap swap defaults 0 0
    5、free命令
        [root@localhost ~]# free
        #查看内存与swap分区使用状况
         cached（缓存）：是指把读取出来的数据保存在内存当
        中，当再次读取时，不用读取硬盘而直接从内存当中读
        取，加速了数据的读取过程
         buffer（缓冲）：是指在写入数据时，先把分散的写入操
        作保存到内存当中，当达到一定程度再集中写入硬盘，
        减少了磁盘碎片和硬盘的反复寻道，加速了数据的写入
        过程

--Shell概述
    1、Shell是什么
         Shell是一个命令行解释器，它为用户提供了一个向Linux内核发送请求以便运行程
        序的界面系统级程序，用户可以用Shell来启动、挂起、停止甚至是编写一些程序。
         Shell还是一个功能相当强大的编程语言，易编写，易调试，灵活性较强。Shell是解
        释执行的脚本语言，在Shell中可以直接调用Linux系统命令。

    2、Shell的分类
        Bourne Shell：从1979起Unix就开始使用Bourne Shell，Bourne Shell的主文件名为sh。
         C Shell： C Shell主要在BSD版的Unix系统中使用，其语法和C语言相类似而得名
         Shell的两种主要语法类型有Bourne和C，这两种语法彼此不兼容。Bourne家族主要
包括sh、ksh、Bash、psh、zsh；C家族主要包括：csh、tcsh
         Bash： Bash与sh兼容，现在使用的Linux就是使用Bash作为用户的基本Shell。
    3、Linux支持的Shell
         /etc/shells

--Shell脚本的执行方式
    1、echo输出命令
         [root@localhost ~]# echo [选项] [输出内容]
    选项：
        -e： 支持反斜线控制的字符转换

        控制字符 作 用
        \\ 输出\本身
        \a 输出警告音
        \b 退格键，也就是向左删除键
        \c 取消输出行末的换行符。和“-n”选项一致
        \e ESCAPE键
        \f 换页符
        \n 换行符
        \r 回车键
        \t 制表符，也就是Tab键
        \v 垂直制表符
        \0nnn 按照八进制ASCII码表输出字符。其中0为数字零，nnn是三位八进
        制数
        \xhh 按照十六进制ASCII码表输出字符。其中hh是两位十六进制数

        [root@localhost ~]# echo -e "ab\bc"
        #删除左侧字符
        [root@localhost ~]# echo -e "a\tb\tc\nd\te\tf"
        #制表符与换行符
        [root@localhost ~]# echo -e \
        "\x61\t\x62\t\x63\n\x64\t\x65\t\x66"
        #按照十六进制ASCII码也同样可以输出
        [root@localhost ~]# echo -e "\e[1;31m abcd \e[0m"
        #输出颜色
        #30m=黑色，31m=红色，32m=绿色，33m=黄色
        #34m=蓝色，35m=洋红，36m=青色，37m=白色

    2、第一个脚本
        [root@localhost sh]# vi hello.sh
        #!/bin/Bash
        #The first program
        # Author: shenchao （E-mail: shenchao@lampbrother.net）
        echo -e "Mr. Shen Chao is the most honest man in
        LampBrother"
    3、脚本执行
         赋予执行权限，直接运行
             chmod 755 hello.sh
             ./hello.sh
         通过Bash调用执行脚本
             bash hello.sh

--Bash的基本功能
--历史命令与命令补全
    1、历史命令
    [root@localhost ~]# history [选项] [历史命令保存文件]
    选项：
        -c： 清空历史命令
        -w： 把缓存中的历史命令写入历史命令保存文件
        ~/.bash_history
     历史命令默认会保存1000条,可以在环境
    变量配置文件/etc/profile中进行修改

    历史命令的调用
         使用上、下箭头调用以前的历史命令
         使用“!n”重复执行第n条历史命令
         使用“!!”重复执行上一条命令
         使用“!字串”重复执行最后一条以该字
        串开头的命令

    2、命令与文件补全
     在Bash中，命令与文件补全是非常方便与
    常用的功能，我们只要在输入命令或文件
    时，按“Tab”键就会自动进行补全

--命令别名与常用快捷键
    1、命令别名
    [root@localhost ~]# alias 别名='原命令'
    #设定命令别名
    [root@localhost ~]# alias
    #查询命令别名

    命令执行时顺序
    1 第一顺位执行用绝对路径或相对路径执行的命令。
    2 第二顺位执行别名。
    3 第三顺位执行Bash的内部命令。
    4 第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令。

    让别名永久生效
    [root@localhost ~]# vi /root/.bashrc

    删除别名
    [root@localhost ~]# unalias 别名

    2、Bash常用快捷键
        ctrl+A 把光标移动到命令行开头。如果我们输入的命令过长，想要把光标移动到命令行开头时使用。
        ctrl+E 把光标移动到命令行结尾。
        ctrl+C 强制终止当前的命令。
        ctrl+L 清屏，相当于clear命令。
        ctrl+U 删除或剪切光标之前的命令。我输入了一行很长的命令，不用使用退格键一个一个字符的删除，使用这个快捷键会更加方便
        ctrl+K 删除或剪切光标之后的内容。
        ctrl+Y 粘贴ctrl+U或ctrl+K剪切的内容。
        ctrl+R 在历史命令中搜索，按下ctrl+R之后，就会出现搜索界面，只要输入搜索内容，就会从历史命令中搜索。
        ctrl+D 退出当前终端。
        ctrl+Z 暂停，并放入后台。这个快捷键牵扯工作管理的内容，我们在系统管理章节详细介绍。
        ctrl+S 暂停屏幕输出。
        ctrl+Q 恢复屏幕输出。

--输入输出重定向

    1、标准输入输出
        设备      设备文件名       文件描述符       类型
        键盘      /dev/stdin          0           标准输入
        显示器     /dev/sdtout         1           标准输出
        显示器     /dev/sdterr         2           标准错误输出

    2、输出重定向
        标准输出重定向:
            命令 > 文件          以覆盖的方式，把命令的正确输出输出到指定的文件或设备当中。
            命令 >> 文件        以追加的方式，把命令的正确输出输出到指定的文件或设备当中。

        标准错误输出重定向:
            错误命令 2>文件       以覆盖的方式，把命令的错误输出输出到指定的文件或设备当中。
            错误命令 2>>文件      以追加的方式，把命令的错误输出输出到指定的文件或设备当中。

        正确输出和错误输出同时保存:
            命令 > 文件 2>&1    以覆盖的方式，把正确输出和错误输出都保存到同一个文件当中。
            命令 >> 文件 2>&1   以追加的方式，把正确输出和错误输出都保存到同一个文件当中。
            命令 &>文件     以覆盖的方式，把正确输出和错误输出都保存到同一个文件当中。
            命令 &>>文件    以追加的方式，把正确输出和错误输出都保存到同一个文件当中。
            命令>>文件1 2>>文件2      把正确的输出追加到文件1中，把错误的输出追加到文件2中。

    3、输入重定向
        [root@localhost ~]# wc [选项] [文件名]
        选项：
            -c 统计字节数
            -w 统计单词数
            -l 统计行数

        命令<文件 把文件作为命令的输入
        命令<< 标识符
        …
        标识符 把标识符之间内容作为 命令的输入



ifconfig eth0 192.168.118.2  临时更改IP，重启后会失效
/boot/ 这个目录如果写满了，系统将无法启动，并且最好 将这个目录做一下备份





