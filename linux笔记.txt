--UNIX 发展历史
    （1）1965年，美国麻省理工学院（MIT）、通用电气公司（GE）及AT&T的贝尔实验室联合开发Multics工程计划，其目标是开发一种交互式的具有多道程序处理能力的分时操作系统，但因 Multics追求的目标过于庞大复杂，项目进度远远落后于计划，最后贝尔实验室宣布退出。
    （2）1969年，美国贝尔实验室的肯 • 汤普森在DEC PDP-7机器上开发出了UNIX系统。
    （3）1971年，肯 • 汤普森的同事丹尼斯 • 里奇发明了C语言；1973年，UNIX系统的绝大部分源代码用C语言重写，这为提高UNIX系统的可移植性打下基础。

--UNIX 主要发行版本
    操作系统    公司                          硬件平台
    AIX          IBM                         PowerPC
    HP-UX        HP                          PA-RISC
    Solaris      Sun                         SPARC
    Linux	     Red Hat 、Ubuntu ……	     IA（Intel、AMD、 Cyrix、RISE...）

--Linux 发展历史
    Linux系统诞生于1991年，由芬兰大学生李纳斯（Linus Torvalds）和后来陆续加入的众多爱好者共同开发完成。Linux是开源软件，源代码开放的UNIX。

--Linux 内核版本
    Linux内核官网：www.kernel.org
    目前最新的内核版本 3.11.10

--Linux 主要发行版本
    redhat  Centos  suse  fedoro  gentoo linux  红旗linux  mandriva  turbolinux
    debian  ubuntu  knoppix

--开源软件
    apache  Nginx  Mysql  php  samba  mongoDB python  Ruby  Sphinx

    使用的自由:绝大多数开源软件免费
    研究的自由:可以获得软件源代码
    散布及改良的自由:可以自由传播、改良甚至销售

    支撑互联网的开源技术（LAMP):Linux 操作系统 ;Apache Web服务器;  MySQL 数据库；PHP编程语言

--Linux应用领域
    1、基于Linux的企业服务器
        www.netcraft.com (一个扫描服务器信息的网站）
    2、Linux在嵌入式领域
        1）手机、平板电脑
        2）其他嵌入式应用
            智能家电：机顶盒、游戏机、数码相机等
            智能卡系统
            航空系统
            银行系统
            卡拉OK点歌系统
    3、Linux在电影娱乐业
        各种3d设计等

--VMware虚拟机安装与使用
   VMware是一个虚拟PC的软件，可以在现有的操作系统上虚拟出一个新的硬件环境，相当于模拟出一台新的PC ，以此来实现在一台机器上真正同时运行多个独立的操作系统。
   VMware官方网站 http://www.vmware.com

--系统分区
    主分区：最多只能有4个。
    扩展分区：
        最多只能有1个。
        主分区加扩展分区最多有4个。
        不能写入数据，只能包含逻辑分区
    逻辑分区

    硬件设备文件名：
    硬 件	            设备文件名
    IDE硬盘           	/dev/hd[a-d]
    SCSI/SATA/USB硬盘	/dev/sd[a-p]
    光驱              	/dev/cdrom或/dev/hdc
    软盘              	/dev/fd[0-1]
    打印机（25针）    	/dev/lp[0-2]
    打印机（USB）    	/dev/usb/lp[0-15]
    鼠标	            /dev/mouse

    挂载：
    必须分区
        	/ （根分区）
        	swap分区（交换分区，内存2倍，不超过2GB）
    推荐分区
        	/boot （启动分区，200MB）

--Linux系统安装
    安装欢迎界面
        “Install or upgrade an existing system”：安装或升级现有系统
        “Install system with basic video driver”：安装过程采用基本的显卡驱动
        “Rescue installed system”：进入系统修复模式
        “Boot from local drive”：退出安装从硬盘启动
        “Memory test”：存储介质检测

    安装日志
        /root/install.log：存储了安装在系统中的软件包及其版本信息
        /root/install.log.syslog：存储了安装过程中留下的事件记录
        /root/anaconda-ks.cfg：以Kickstart配置文件的格式记录安装过程中设置的选项信息

--远程登录管理工具
    虚拟机网络配置:
        桥接  注意连接的哪块网卡
        NAT
        Host-only   只能与主机通讯
    工具：SecureCRT Winscp

--学习Linux的注意事项
    Linux严格区分大小写
    Linux中所有内容以文件形式保存，包括    硬件
        硬盘文件是/dev/sd[a-p]
        光盘文件是/dev/sr0等
    Linux不靠扩展名区分文件类型
        压缩包：“*.gz”、“*.bz2” *.tar.bz2”、“*.tgz”等
        二进制软件包：“.rpm”
        网页文件：“*.html”、“*.php”
        脚本文件：“*.sh”
        配置文件：“*.conf”
    Linux所有的存储设备都必须挂载之后用户才能使用，包括硬盘、U盘和光盘
    Windows下的程序不能直接在Linux中安装和运行

--服务器管理和维护建议
    1、Linux各目录的作用
        /bin/
        	存放系统命令的目录，普通用户和超级用户都可以执行。不过放在/bin下的命令在单用户模式下也可以执行
        /sbin/
        	保存和系统环境设置相关的命令，只有超级用户可以使用这些命令进行系统环境设置，但是有些命令可以允许普通用户查看
        /usr/bin/
        	存放系统命令的目录，普通用户和超级用户都可以执行。这些命令和系统启动无关，在单用户模式下不能执行
        /usr/sbin/
        	存放根文件系统不必要的系统管理命令，例如多数服务程序。只有超级用户可以使用。大家其实可以注意到Linux的系统，在所有“sbin”目录中保存的命令只有超级用户可以使用，“bin”目录中保存的命令所有用户都可以使用
        /boot/
        	系统启动目录，保存系统启动相关的文件，如内核文件和启动引导程序（grub）文件等
        /dev/
        	设备文件保存位置。我们已经说过Linux中所有内容以文件形式保存，包括硬件。那么这个目录就是用来保存所有硬件设备文件的
        /etc/
        	配置文件保存位置。系统内所有采用默认安装方式（rpm安装）的服务的配置文件全部都保存在这个目录当中，如用户账户和密码，服务的启动脚本，常用服务的配置文件等
        /home/
        	普通用户的家目录。建立每个用户时，每个用户要有一个默认登录位置，这个位置就是这个用户的家目录，所有普通用户的家目录就是在/home下建立一个和用户名相同的目录。如用户user1的家目录就是/home/user1
        /lib/
        	系统调用的函数库保存位置
        /lost+found/
        	当系统意外崩溃或机器意外关机，而产生一些文件碎片放在这里。当系统启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。这个目录只在每个分区中出现，例如/lost+found就是根分区的备份恢复目录，/boot/lost+found就是/boot分区的备份恢复目录
        /media/
        	挂载目录。系统建议是用来挂载媒体设备的，例如软盘和光盘
        /mnt/
        	挂载目录，早期Linux中只有这一个挂载目录，并没有细分。现在这个目录系统建议挂载额外设备，如U盘，移动硬盘和其他操作系统的分区
        /misc/
        	挂载目录。系统建议用来挂载NFS服务的共享目录。我们在刚刚已经解释了挂载童鞋们应该知道只要是一个已经建立的空目录就可以作为挂载点。那么系统虽然准备了三个默认挂载目录/media、/mnt、/misc，但是到底在哪个目录中挂载什么设备都可以由管理员自己决定。例如超哥接触Linux的时候，默认挂载目录只有/mnt一个，所以养成了在/mnt下建立不同目录挂载不同设备的习惯。如
        /mnt/
            cdrom挂载光盘，/mnt/usb挂载U盘，这都是可以的
        /opt/
        	第三方安装的软件保存位置。这个目录就是放置和安装其他软件的位置，我手工安装的源码包软件都可以安装到这个目录当中。不过我还是更加习惯把软件放置到/usr/local/目录当中，也就是说/usr/local/目录也可以用来安装软件
        /proc/
        	虚拟文件系统，该目录中的数据并不保存到硬盘当中，而是保存到内存当中。主要保存系统的内核，进程，外部设备状态和网络状态灯。如/proc/cpuinfo是保存CPU信息的，/proc/devices是保存设备驱动的列表的，/proc/filesystems是保存文件系统列表的，/proc/net/是保存网络协议信息的
        /sys/
        	虚拟文件系统。和/proc目录相似，都是保存在内存当中的，主要是保存于内核相关信息的
        /root/
        	超级用户的家目录。普通用户家目录在“/home”下，超级用于家目录直接在“/”下
        /srv/
        	服务数据目录。一些系统服务启动之后，可以在这个目录中保存所需要的数据
        /tmp/
        	临时目录。系统存放临时文件的目录，该目录下所有用户都可以访问和写入。我们建议此目录中不能保存重要数据，最好每次开机都把该目录清空
        /usr/
        	系统软件资源目录。注意usr不是user的缩写，而是“Unix Softwre Resource”的缩写，所以不是存放用户数据，而是存放系统软件资源的目录。系统中安装的软件大多数保存在这里，所以除了/usr/bin/和/usr/sbin/ 这两个目录，我在介绍几个/usr/下的二级目录
        /var/
        	动态数据保存位置。主要保存缓存、日志以及软件运行所产生的文件

    2、服务器注意事项
        远程服务器不允许关机，只能重启
        重启时应该关闭服务 
        不要在服务器访问高峰运行高负载命令
        远程配置防火墙时不要把自己踢出服务器
        指定合理的密码规范并定期更新
        合理分配权限
        定期备份重要数据和日志

--Linux命令格式
    命令格式：
        命令 [-选项] [参数] 例： ls -la /etc
        说明：1）个别命令使用不遵循此格式
              2）当有多个选项时，可以写在一起
              3）简化选项与完整选项, 例如：   -a 等于 --all

--目录处理命令：ls
    命令名称：ls
    命令英文原意：list
    命令所在路径：/bin/ls
    执行权限：所有用户
    功能描述：显示目录文件
    语法：ls  选项[-ald]  [文件或目录]
        -a    显示所有文件，包括隐藏文件
        -l    详细信息显示
        -d    查看目录属性
    -rw-r--r--
    - 文件类型（- 文件 ，d 目录 ，l 软链接文件）
    rw- r--	r-- （三组分别对应 u所有者 g所属组 o其他人 r读 w写 x执行）

--目录处理命令：mkdir
    命令名称：mkdir
    命令英文原意：make directories
    命令所在路径：/bin/mkdir
    执行权限：所有用户
    语法：mkdir -p [目录名]
    功能描述：创建新目录
         -p 递归创建
    范例： $ mkdir -p /tmp/Japan/boduo
           $ mkdir /tmp/Japan/longze /tmp/Japan/cangjing

--目录处理命令：cd
    命令名称：cd
    命令英文原意：change directory
    命令所在路径：shell内置命令
    执行权限：所有用户
    语法：cd [目录]
    功能描述：切换目录
    范例： $ cd /tmp/Japan/boduo 切换到指定目录
           $ cd .. 回到上一级目录

--目录处理命令：pwd
    命令名称：pwd
    命令英文原意：print working directory
    命令所在路径：/bin/pwd
    执行权限：所有用户
    语法：pwd
    功能描述：显示当前目录
    范例：$ pwd

--文件处理命令：rmdir
    命令名称：rmdir
    命令英文原意：remove empty directories
    命令所在路径：/bin/rmdir
    执行权限：所有用户
    语法：rmdir [目录名]
    功能描述： 删除空目录
    范例： $ rmdir /tmp/Japan/boduo

--目录处理命令：cp
    命令名称：cp
    命令英文原意：copy
    命令所在路径：/bin/cp
    执行权限：所有用户
    语法：cp -rp [原文件或目录] [目标目录]
    -r 复制目录
    -p 保留文件属性
    功能描述：复制文件或目录
    范例：
        $ cp -r /tmp/Japan/cangjing /root
        将目录/tmp/Japan/cangjing复制到目录/root下

        $ cp -rp /tmp/Japan/boduo /tmp/Japan/longze /root
        将/tmp/Japan目录下的boduo和longze目录复制到/root下，保持目录属性

--目录处理命令：mv
    命令名称：mv
    命令英文原意：move
    命令所在路径：/bin/mv
    执行权限：所有用户
    语法：mv [原文件或目录] [目标目录]
    功能描述：剪切文件、改名

--目录处理命令：rm
    命令名称：rm
    命令英文原意：remove
    命令所在路径：/bin/rm
    执行权限：所有用户
    语法：rm -rf [文件或目录]
        -r 删除目录
        -f 强制执行
    功能描述：删除文件
    范例：
        $ rm /tmp/yum.log        删除文件/tmp/yum.log
        $ rm -rf /tmp/Japan/longze        删除目录/tmp/Japan/longze

--文件处理命令：touch
    命令名称：touch
    命令所在路径：/bin/touch
    执行权限：所有用户
    语法：touch [文件名]
    功能描述：创建空文件
    范例： $ touch Japanlovestory.list

--文件处理命令：cat
    命令名称：cat
    命令所在路径：/bin/cat
    执行权限：所有用户
    语法：cat [文件名]
    功能描述：显示文件内容
            -n 显示行号
    范例：  $ cat /etc/issue
            $ cat -n /etc/services

--文件处理命令：tac
    命令名称：tac
    命令所在路径：/usr/bin/tac
    执行权限：所有用户
    语法：tac [文件名]
    功能描述：显示文件内容（反向列示）
    范例： $ tac /etc/issue

--文件处理命令：more
    命令名称：more
    命令所在路径：/bin/more
    执行权限：所有用户
    语法：more [文件名]
        (空格) 或f 翻页
        (Enter) 换行
        q或Q 退出
    功能描述：分页显示文件内容
    范例： $ more /etc/services

--文件处理命令：less
    命令名称：less
    命令所在路径：/usr/bin/less
    执行权限：所有用户
    语法：less [文件名]
    功能描述：分页显示文件内容（可向上翻页）
    范例： $ less /etc/services

--文件处理命令：head
    命令名称：head
    命令所在路径：/usr/bin/head
    执行权限：所有用户
    语法：head [文件名]
    功能描述：显示文件前面几行
              -n 指定行数
    范例： $ head -n 20 /etc/services

--文件处理命令：tail
    命令名称：tail
    命令所在路径：/usr/bin/tail
    执行权限：所有用户
    语法：tail [文件名]
    功能描述：显示文件后面几行
            -n 指定行数
            -f 动态显示文件末尾内容
    范例： $ tail -n 18 /etc/services

--文件处理命令：ln
    命令名称：ln
    命令英文原意：link
    命令所在路径：/bin/ln
    执行权限：所有用户
    语法：ln -s [原文件] [目标文件]
           -s 创建软链接
    功能描述：生成链接文件
    范例：
        $ ln -s /etc/issue /tmp/issue.soft
        创建文件/etc/issue的软链接/tmp/issue.soft
        $ ln /etc/issue /tmp/issue.hard
        创建文件/etc/issue的硬链接/tmp/issue.hard

    软链接特征：类似Windows快捷方式
        1、lrwxrwxrwx l 软链接
        软链接文件权限都为rwxrwxrwx
        2、文件大小-只是符号链接
        3、/tmp/issue.soft -> /etc/issue
        箭头指向原文件

    硬链接特征：
        1、拷贝cp -p + 同步更新
        echo "this is a test" >> /etc/motd
        2、可通过i节点识别
        3、不能跨分区
        4、不能针对目录使用

--权限管理命令：chmod
    命令名称：chmod
    命令英文原意：change the permissions mode of a file
    命令所在路径：/bin/chmod
    执行权限：所有用户
    语法：chmod [{ugoa}{+-=}{rwx}] [文件或目录]
                [mode=421 ] [文件或目录]
                -R 递归修改
    功能描述：改变文件或目录权限

    权限的数字表示
    r ---- 4
    w ---- 2
    x ---- 1
    rwx rw- r--
    7    6  4

    范例：
        $ chmod g+w testfile        赋予文件testfile所属组写权限
        $ chmod -R 777 testdir      修改目录testfile及其目录下文件为所有用户具有全部权限

    文件目录权限总结
        r 读权限   可以查看文件内容,可以列出目录中的内容
        w 写权限  可以修改文件内容,可以在目录中创建、删除文件
        x 执行权限  可以执行文件,可以进入目录

--权限管理命令：chown
    命令名称：chown
    命令英文原意：change file ownership
    命令所在路径：/bin/chown
    执行权限：所有用户
    语法：chown [用户] [文件或目录]
    功能描述：改变文件或目录的所有者
    范例：$ chown shenchao fengjie    改变文件fengjie的所有者为shenchao

--权限管理命令：chgrp
    命令名称：chgrp
    命令英文原意：change file group ownership
    命令所在路径：/bin/chgrp
    执行权限：所有用户
    语法：chgrp [用户组] [文件或目录]
    功能描述：改变文件或目录的所属组
    范例：$ chgrp lampbrother fengjie    改变文件fengjie的所属组为lampbrother

--权限管理命令：umask
    命令名称：umask
    命令英文原意：the user file-creation mask
    命令所在路径：Shell内置命令
    执行权限：所有用户
    语法：umask [-S]
            -S 以rwx形式显示新建文件缺省权限
    功能描述：显示、设置文件的缺省权限
    范例： $ umask -S

--文件搜索命令：find
    命令名称：find
    命令所在路径：/bin/find
    执行权限：所有用户
    语法：find [搜索范围] [匹配条件]
    功能描述：文件搜索
    范例：
        $ find /etc -name init
        在目录/etc中查找文件init
        -iname 不区分大小写

        $ find / -size +204800
        在根目录下查找大于100MB的文件
        +n 大于-n 小于n 等于

        $ find /home -user shenchao
        在根目录下查找所有者为shenchao的文件
        -group 根据所属组查找

        $ find /etc -cmin -5
        在/etc下查找5分钟内被修改过属性的文件和目录
        -amin 访问时间access
        -cmin 文件属性change
        -mmin 文件内容modify

        $ find /etc -size +163840 -a -size -204800
        在/etc下查找大于80MB小于100MB的文件
        -a 两个条件同时满足
        -o 两个条件满足任意一个即可

        $ find /etc -name inittab -exec ls -l {} \;
        在/etc下查找inittab文件并显示其详细信息
        -exec/-ok 命令{} \; 对搜索结果执行操作

        -type 根据文件类型查找
        f 文件d 目录l 软链接文件
        -inum 根据i节点查找

--文件搜索命令：locate
    命令名称：locate
    命令所在路径：/usr/bin/locate
    执行权限：所有用户
    语法：locate 文件名
    功能描述：在文件资料库中查找文件
    范例：$ locate inittab

--文件搜索命令：which
    命令名称：which
    命令所在路径：/usr/bin/which
    执行权限：所有用户
    语法：which 命令
    功能描述：搜索命令所在目录及别名信息
    范例：$ which ls

--文件搜索命令：whereis
    命令名称：whereis
    命令所在路径：/usr/bin/whereis
    执行权限：所有用户
    语法：whereis [命令名称]
    功能描述：搜索命令所在目录及帮助文档路径
    范例：$ whereis ls

--文件搜索命令：grep
    命令名称：grep
    命令所在路径：/bin/grep
    执行权限：所有用户
    语法：grep -iv [指定字串] [文件]
    功能描述：在文件中搜寻字串匹配的行并输出
            -i 不区分大小写
            -v 排除指定字串
    范例：# grep mysql /root/install.log

--帮助命令：man
    命令名称：man
    命令英文原意：manual
    命令所在路径：/usr/bin/man
    执行权限：所有用户
    语法：man [命令或配置文件]
    功能描述：获得帮助信息
    范例：$ man ls    查看ls命令的帮助信息
    $ man services    查看配置文件services的帮助信息

--帮助命令：help
    命令名称：help
    命令所在路径：Shell内置命令
    执行权限：所有用户
    语法：help 命令
    功能描述：获得Shell内置命令的帮助信息
    范例：$ help umask    查看umask命令的帮助信息

--用户管理命令：useradd
    命令名称：useradd
    命令所在路径：/usr/sbin/useradd
    执行权限：root
    语法：useradd 用户名
    功能描述：添加新用户
    范例：$ useradd yangmi

--用户管理命令：passwd
    命令名称：passwd
    命令所在路径：/usr/bin/passwd
    执行权限：所有用户
    语法：passwd 用户名
    功能描述：设置用户密码
    范例： $ passwd yangmi

--用户管理命令：who
    命令名称：who
    命令所在路径：/usr/bin/who
    执行权限：所有用户
    语法：who
    功能描述：查看登录用户信息
    范例： $ who

--用户管理命令：w
    命令名称：w
    命令所在路径：/usr/bin/w
    执行权限：所有用户
    语法：w
    功能描述：查看登录用户详细信息
    范例： $ w

--压缩解压命令：gzip
    命令名称：gzip
    命令英文原意：GNU zip
    命令所在路径：/bin/gzip
    执行权限：所有用户
    语法：gzip [文件]
    功能描述：压缩文件
    压缩后文件格式：.gz

--压缩解压命令：gunzip
    命令名称：gunzip
    命令英文原意：GNU unzip
    命令所在路径：/bin/gunzip
    执行权限：所有用户
    语法：gunzip [压缩文件]
    功能描述：解压缩.gz的压缩文件
    范例： $ gunzip boduo.gz

--压缩解压命令：tar
    命令名称：tar
    命令所在路径：/bin/tar
    执行权限：所有用户
    语法：tar 选项[-zcf] [压缩后文件名] [目录]
        -c 打包
        -v 显示详细信息
        -f 指定文件名
        -z 打包同时压缩
    功能描述：打包目录
    压缩后文件格式：.tar.gz
    范例：
        $ tar -zcf Japan.tar.gz Japan
        将目录Japan打包并压缩为.tar.gz文件

    tar命令解压缩语法：
        -x 解包
        -v 显示详细信息
        -f 指定解压文件
        -z 解压缩
        范例：$ tar -zxvf Japan.tar.gz

--压缩解压命令：zip
    命令名称：zip
    命令所在路径：/usr/bin/zip
    执行权限：所有用户
    语法：
        zip 选项[-r] [压缩后文件名] [文件或目录]
        -r 压缩目录
    功能描述：压缩文件或目录
    压缩后文件格式：.zip
    范例：
        $ zip buduo.zip boduo        压缩文件
        $ zip -r Japan.zip Japan        压缩目录

--压缩解压命令：unzip
    命令名称：unzip
    命令所在路径：/usr/bin/unzip
    执行权限：所有用户
    语法：unzip [压缩文件]
    功能描述：解压.zip的压缩文件
    范例：$ unzip test.zip

--压缩解压命令：bzip2
    命令名称：bzip2
    命令所在路径：/usr/bin/bzip2
    执行权限：所有用户
    语法： bzip2 选项[-k] [文件]
            -k 产生压缩文件后保留原文件
    功能描述：压缩文件
    压缩后文件格式：.bz2
    范例：$ bzip2 -k boduo
         $ tar -cjf Japan.tar.bz2 Japan

--压缩解压命令：bunzip2
    命令名称：bunzip2
    命令所在路径：/usr/bin/bunzip2
    执行权限：所有用户
    语法： bunzip2 选项[-k] [压缩文件]
            -k 解压缩后保留原文件
    功能描述：解压缩
    范例：$ bunzip2 -k boduo.bz2
           $ tar -xjf Japan.tar.bz2

--网络命令：write
    指令名称：write
    指令所在路径：/usr/bin/write
    执行权限：所有用户
    语法：write <用户名>
    功能描述：给用户发信息，以Ctrl+D保存结束
    范例： # write linzhiling

--网络命令：wall
    指令名称：wall
    命令英文原意：write all
    指令所在路径：/usr/bin/wall
    执行权限：所有用户
    语法：wall [message]
    功能描述：发广播信息
    范例： # wall ShenChao is a honest man!

--网络命令：ping
    命令名称：ping
    命令所在路径：/bin/ping
    执行权限：所有用户
    语法：ping 选项IP地址
        -c 指定发送次数
    功能描述：测试网络连通性
    范例： # ping 192.168.1.156

--网络命令：ifconfig
    命令名称：ifconfig
    命令英文原意：interface configure
    命令所在路径：/sbin/ifconfig
    执行权限：root
    语法：ifconfig 网卡名称IP地址
    功能描述：查看和设置网卡信息
    范例：# ifconfig eth0 192.168.8.250

--网络命令：mail
    命令名称：mail
    命令所在路径：/bin/mail
    执行权限：所有用户
    语法：mail [用户名]
    功能描述：查看发送电子邮件
    范例：# mail root

--网络命令：last
    命令名称：last
    命令所在路径：/usr/bin/last
    执行权限：所有用户
    语法：last
    功能描述：列出目前与过去登入系统的用户信息
    范例：# last

--网络命令：lastlog
    命令名称：lastlog
    命令所在路径：/usr/bin/lastlog
    执行权限：所有用户
    语法：lastlog
    功能描述：检查某特定用户上次登录的时间
    范例：  # lastlog
            # lastlog -u 502

--网络命令：traceroute
    命令名称：traceroute
    命令所在路径：/bin/traceroute
    执行权限：所有用户
    语法：traceroute
    功能描述：显示数据包到主机间的路径
    范例：# traceroute www.lampbrother.net

--网络命令：netstat
    命令名称：netstat
    命令所在路径：/bin/netstat
    执行权限：所有用户
    语法：netstat [选项]
    功能描述：显示网络相关信息
    选项：
        -t ： TCP协议
        -u ： UDP协议
        -l ： 监听
        -r ： 路由
        -n ： 显示IP地址和端口号
    范例：
        # netstat -tlun 查看本机监听的端口
        # netstat -an 查看本机所有的网络连接
        # netstat -rn 查看本机路由表

--网络命令：setup
    命令名称：setup
    命令所在路径：/usr/bin/setup
    执行权限：root
    语法：setup
    功能描述：配置网络
    范例：# setup

--挂载命令
    命令名称：mount
    命令位置：/bin/mount
    执行权限：所有用户
    命令语法：mount [-t 文件系统] 设备文件名挂载点
    范例：# mount -t iso9660 /dev/sr0 /mnt/cdrom

--关机重启命令
    1、shutdown命令
        [root@localhost ~]# shutdown [选项] 时间
        选项：
        -c：取消前一个关机命令
        -h：关机
        -r：重启

    2、其他关机命令
        [root@localhost ~]# halt
        [root@localhost ~]# poweroff
        [root@localhost ~]# init 0

    3、其他重启命令
        [root@localhost ~]# reboot
        [root@localhost ~]# init 6

    4、系统运行级别
        0 关机
        1单用户
        2不完全多用户，不含NFS服务
        3完全多用户
        4未分配
        5图形界面
        6重启
            [root@localhost ~]# cat /etc/inittab
            #修改系统默认运行级别
            id:3:initdefault:
            [root@localhost ~]# runlevel
            #查询系统运行级别

    5、退出登录命令
        [root@localhost ~]# logout

--Vim常用操作
    Vim是一个功能强大的全屏幕文本编辑器，是Linux/UNIX上最常用的文本编辑器，
    它的作用是建立、编辑、显示文本文件。
    Vim 没有菜单，只有命令。
    www.vim.org

    Vim 工作模式：
        命令模式    插入模式    编辑模式
进入 vi filename
退出
输入:wq
输入i a o
ESC键：
命令以回车
结束运行

    插入命令：
        O 在光标上插入新行
        o 在光标下插入新行
        I 在光标所在行行首插入
        i 在光标所在字符前插入
        A 在光标所在行尾插入
        a 在光标所在字符后插入

    定位命令：
        : set nu 设置行号
        : set nonu 取消行号
        gg  到第一行
        G  到最后一行
        nG 到第n行
        :n 到第n行
        $ 移至行尾
        0 移至行首

    删除命令：
        :n1,n2d 删除指定范围的行
        D 删除光标所在处到行尾内容
        dG 删除光标所在行到文件末尾内容
        dd 删除光标所在行，ndd删除n行
        nx 删除光标所在处后n个字符
        x 删除光标所在处字符

    复制和剪切命令：
        yy 复制当前行
        nyy 复制当前行以下n行
        dd 剪切当前行
        ndd 剪切当前行以下n行
        p、P 粘贴在当前光标所在行下或行上

    替换和取消命令：
        r 取代光标所在处字符
        R 从光标所在处开始替换字符，按Esc结束
        u 取消上一步操作

    搜索和搜索替换命令：
         /string 搜索指定字符串
                 搜索时忽略大小写:set ic
        n 搜索指定字符串的下一个出现位置
        :%s/old/new/g 全文替换指定字符串
        :n1,n2s/old/new/g 在一定范围内替换指定字符串

    保存和退出命令：
        :wq! 保存修改并退出（文件所有者及root可使用）
        :q! 不保存修改退出
        ZZ 快捷键，保存修改并退出
        :wq 保存修改并退出
        :w new_filename 另存为指定文件
        :w 保存修改

--Vim使用技巧
    导入命令执行结果:r !命令
     定义快捷键:map 快捷键触发命令
        范例：  : map ^P I#<ESC>
                : map ^B 0x
     连续行注释:n1,n2s/^/#/g
                :n1,n2s/^#//g
                :n1,n2s/^/\/\//g
     替换:ab mymail samlee@lampbrother.net

--软件包管理简介
    1、软件包分类
        源码包
        脚本安装包
        二进制包（RPM包、系统默认包）

    2、源码包
        源码包的优点是：
            开源，如果有足够的能力，可以修改源代码
            可以自由选择所需的功能
            软件是编译安装，所以更加适合自己的系统，更加稳定也效率更高
            卸载方便

        源码包的缺点
            安装过程步骤较多，尤其安装较大的软件集合时（如LAMP环境搭建），容易出现拼写错误
            编译过程时间较长，安装比二进制安装时间长
            因为是编译安装，安装过程中一旦报错新手很难解决

    3、RPM包
        二进制包的优点
            包管理系统简单，只通过几个命令就可以实现包的安装、升级、查询和卸载
            安装速度比源码包安装快的多

        二进制包缺点：
            经过编译，不再可以看到源代码
            功能选择不如源码包灵活
            依赖性

ifconfig eth0 192.168.118.2  临时更改IP，重启后会失效
/boot/ 这个目录如果写满了，系统将无法启动，并且最好 将这个目录做一下备份


mkdir  
	命令所在路径：/bin/mkdir
	-p  递归创建
	例：
		mkdir -p /tmp/japan/boduo
		mkdir /tmp/japan/longze/tmp/japan/cangjing


